{"version":3,"sources":["assets/fonts/SourceSerifPro/SourceSerifPro-Black.ttf","assets/fonts/SourceSerifPro/SourceSerifPro-Bold.ttf","components/firebase/Firebase.js","FirebaseConfig.js","components/firebase/FirebaseContext.js","components/shared/constants/Themes.js","components/shared/constants/Styles.js","components/shared/constants/Defaults.js","components/shared/GlobalContext.js","components/themed/Text.js","components/themed/Container.js","components/themed/TextInput.js","components/themed/Button.js","components/themed/ScreenHeader.js","components/themed/Screen.js","components/themed/View.js","components/themed/ActivityIndicator.js","components/themed/DisplayError.js","components/firebase/FirestoreCollectionView.js","components/firebase/FirestoreDocumentView.js","components/themed/ScrollView.js","components/themed/Modal.js","components/themed/Picker.js","components/themed/MaterialIcons.js","components/themed/Switch.js","components/themed/LabeledSwitch.js","components/themed/Image.js","components/Authentication.js","components/shared/FormValidation.js","components/Playground.js","components/shared/ProfileContext.js","components/Home.js","components/messenger/Message.js","components/messenger/Messenger.js","components/messenger/GroupMessenger.js","components/messenger/ManageGroups.js","components/messenger/ManageUserRoles.js","components/messenger/MessengerReducer.js","components/messenger/MemberWall.js","components/Navigation.js","App.js","assets/icon.png"],"names":["module","exports","firebase","length","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","firebaseAuth","firebaseFunctions","GoogleAuthProvider","getCurrentUser","currentUser","useAuthState","FirebaseAuth","getCollection","collectionPath","collection","useCollection","includeMetadataChanges","FirebaseFirestore","snapshotListenOptions","undefined","Error","callFirebaseFunction","funcName","data","httpsCallable","FirebaseContext","createContext","FirebaseProvider","children","loadingUser","errorUser","useState","claims","setClaims","loadingClaims","setLoadingClaims","userToken","setUserToken","useEffect","uid","a","async","getIdToken","token","getIdTokenResult","idTokenResult","updateUserToken","isLoading","error","ActivityIndicator","DisplayError","permissionDenied","Provider","value","addClaim","claimName","userId","authToken","claim","result","removeClaim","getClaims","customClaims","screen","Light","backgroundColor","borderBottomColor","Dark","modal","borderColor","defaultView","container","view","iconColor","color","text","helperText","themedSwitch","trackColorOn","trackColorOff","thumbColorOn","thumbColorOff","iosBackgroundColor","textInput","placeHolderText","materialIcons","button","buttonDisabled","picker","pickerDisabled","tabNavigator","activeTintColor","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","StyleSheet","create","default","displayError","header","paddingTop","fontSize","fontWeight","paddingLeft","icons","paddingHorizontal","content","width","auth","logo","flex","height","alignSelf","margin","footerView","alignItems","justifyContent","marginTop","views","paddingBottom","activityIndicator","alignContent","scrollView","flexRowJustifyCenter","flexDirection","filletedBorderView","padding","borderWidth","borderRadius","flatList","native","touchable","paddingVertical","infiniteScroll","input","overflow","marginHorizontal","toggleBox","borderBottomWidth","item","logoutModal","marginBottom","buttonView","messenger","viewChat","borderTopWidth","marginLeft","marginVertical","sendButton","marginRight","playgroundMode","defaultTheme","GlobalContext","GlobalProvider","Defaults","theme","setTheme","ScreenOrientation","UNKNOWN","screenOrientation","setScreenOrientation","useComponentMounted","catch","err","console","warn","then","orientationInfo","orientation","useComponentUnmounting","style","classRef","restProps","useContext","Text","ref","Themes","selectable","isSafe","SafeAreaView","Styles","View","TextInput","autoCompleteType","autoComplete","autoCapitalize","autoCorrect","underlineColorAndroid","placeholderTextColor","title","disabled","reactNativeButton","properTheme","Button","TouchableOpacity","navigation","photoURL","hasDrawerNavigation","hasHome","hasBack","hasLogout","showLogoutModal","setShowLogoutModal","toggleDarkMode","shown","dismiss","containerStyle","backgroundImageStyle","centerComponent","leftComponent","name","size","onPress","openDrawer","popToTop","pop","leftContainerStyle","placement","rightComponent","source","uri","rightContainerStyle","statusBarProps","ScreenHeader","errorMessage","message","errorMessageText","Container","CollectionFlatList","props","useRef","messages","onScrollProp","onScroll","onStartReached","autoScrollToEnd","state","hitTop","setHitTop","refreshing","setRefreshing","e","nativeEvent","contentOffset","contentSize","layoutMeasurement","Math","round","y","React","FlatList","removeClippedSubviews","contentContainerStyle","log","messengerDispatch","type","amount","updateMessages","onLayout","current","scrollToEnd","animated","onContentSizeChange","f","orderBy","initialNumToRender","snapshot","loadingCollection","errorCollection","setMessages","loadingData","setDataLoading","errorData","setDataError","firstItem","query","limitToLast","startAt","get","getData","querySnapshot","docs","forEach","doc","id","push","getDocumentsDataWithId","errorCollectionCode","code","errorDataCode","selectedIndex","onValueChanged","selectedValue","setSelectedValue","selectedItem","setSelectedItem","PickerCommon","onValueChange","index","map","Item","label","key","bounces","Platform","OS","MaterialIcons","onChange","trackColor","false","true","thumbColor","Switch","ios_backgroundColor","viewStyle","textStyle","Image","LogoutModal","Modal","visible","onTouchOutside","signOut","replace","Authentication","customToken","fullName","setFullName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","passwordResetModalVisible","setPasswordResetModalVisible","isValidEMail","setIsValidEMail","isRegistering","setIsRegistering","submitted","setSubmitted","setIsLoading","signInWithCustomToken","alert","onLoginPress","signInWithEmailAndPassword","match","placeholder","onChangeText","sendPasswordResetEmail","ScrollView","keyboardShouldPersistTaps","require","secureTextEntry","onKeyPress","createUserWithEmailAndPassword","provider","signInWithRedirect","phoneUtil","gPhoneNumber","PhoneNumberUtil","getInstance","isValidCountryCode","countryCode","Yup","strict","errMsg","this","test","phoneNumber","parseAndKeepRawInput","isPossibleNumber","regionCodeFromPhoneNumber","getRegionCodeForNumber","isValidNumberForRegion","Playground","setClaimName","setData","setTimeout","Screen","Picker","placeHolder","reload","Stack","createStackNavigator","loading","firebaseError","NavigationContainer","DefaultTheme","Navigator","initialRouteName","headerMode","component","ProfileContext","sleep","delay","Promise","r","ProfileProvider","profiler","isLoadingCollection","setIsLoadingCollection","collectionError","isLoadingProfile","setIsLoadingProfile","cachedUsers","setCachedUsers","isFetching","setIsFetching","isFetchingRef","fetchUidRef","lookupQueueRef","hasProfile","docRef","exists","getUserProfile","docData","fetchUser","forced","newCache","shift","profile","getUserName","displayName","docChanges","documentChange","useProfiler","setName","profileCache","username","Message","date","postedAt","toDate","Date","toLocaleDateString","time","toLocaleTimeString","authorName","PureComponent","members","setMembers","messageText","setMessageText","groupCollectionPath","newState","sendMessage","newValue","FirestoreCollectionView","renderItem","msg","groups","setGroups","profileContext","groupName","setGroupName","selectedGroup","setSelectedGroup","memberName","setMemberName","selectedMember","setSelectedMember","addGroupModalVisible","setAddGroupModalVisible","renameGroupModalVisible","setRenameGroupModalVisible","removeGroupModalVisible","setRemoveGroupModalVisible","addMemberModalVisible","setAddMemberModalVisible","removeMemberModalVisible","setRemoveMemberModalVisible","promises","groupMembers","add","member","all","loadGroupMembers","render","newMembers","filter","obj","set","removeSelectedMember","addMember","delete","defaultValue","update","isAdmin","setIsAdmin","isManager","setIsManager","isModerator","setIsModerator","setPermissionDenied","setClaim","results","admin","manager","moderator","LabeledSwitch","previousState","reducer","action","viewLength","viewFirst","first","viewLast","last","messengerContainerId","viewLengthMinimum","useReducer","messageCollectionPath","messengerDocumentPath","createMessage","Drawer","createDrawerNavigator","DrawerNavigator","Home","MemberWall","Messenger","GroupMessenger","ManageGroups","ManageUserRoles","user","firebaseLoading","DarkTheme","navigationOptions","headerLeft","getFonts","Fonts","App","fontsLoaded","setFontsLoaded","AppLoading","startAsync","onFinish"],"mappings":"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","file":"static/js/app.eb952e66.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"./fonts/SourceSerifPro-Black.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/SourceSerifPro-Bold.ttf\";","import * as firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport 'firebase/functions';\r\nimport * as FirebaseAuth from 'react-firebase-hooks/auth';\r\nimport * as FirebaseFirestore from 'react-firebase-hooks/firestore';\r\nimport { useReducer } from 'react-native'\r\nimport { firebaseConfig } from '../../FirebaseConfig'\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig)\r\n}\r\n\r\nexport const getFirestore = () => {\r\n    var firestore = firebase.firestore();\r\n    if (false && location.hostname === \"localhost\") {\r\n        firestore.settings({\r\n            host: \"localhost:8080\"\r\n        })\r\n    }\r\n    return firestore;\r\n}\r\n\r\n// getFirestore().enablePersistence()\r\n//     .then(() => {\r\n//         console.log('Warning: Firestore Persistence Enabled!!!')\r\n//     })\r\n//     .catch((err) => {\r\n//         // Not supported\r\n//         if (err.code ==='unimplemented')\r\n//             console.log('Firestore Persistence Error: unimplemented')\r\n\r\n//         // Open in another tab\r\n//         if (err.code === 'failed-precondition')\r\n//             console.log('Firestore Persistence Error: failed-precondition')\r\n//     })\r\n\r\nexport const firebaseAuth = firebase.auth\r\nexport const firebaseFunctions = firebase.functions\r\nexport const firebaseFirestore = firebase.firestore\r\n\r\nexport const GoogleAuthProvider = firebase.auth.GoogleAuthProvider\r\n\r\nexport const getCurrentTimeStamp = () => firebase.firestore.FieldValue.serverTimestamp()\r\nexport const getCurrentUser = () => firebaseAuth().currentUser\r\n\r\nexport const useAuthState = () => FirebaseAuth.useAuthState(firebaseAuth())\r\nexport const useAuthRest = () => {\r\n    // useReducer\r\n}\r\n\r\nexport const getCollection = (collectionPath) => getFirestore().collection(collectionPath)\r\nexport const useCollection = (collectionPath, includeMetadataChanges = false) => (!collectionPath ?\r\n    [undefined, false, new Error('useCollection: collectionPath not specified')] :\r\n    FirebaseFirestore.useCollection(\r\n        getCollection(collectionPath),\r\n        {\r\n            snapshotListenOptions: { includeMetadataChanges },\r\n        }\r\n    )\r\n)\r\n\r\nexport const useCollectionOnce = (collectionPath, includeMetadataChanges = false) => (!collectionPath ?\r\n    [undefined, false, new Error('useCollectionOnce: collectionPath not specified')] :\r\n    FirebaseFirestore.useCollectionOnce(\r\n        getCollection(collectionPath),\r\n        {\r\n            snapshotListenOptions: { includeMetadataChanges },\r\n        }\r\n    )\r\n)\r\n\r\nexport const useCollectionData = (collectionPath, includeMetadataChanges = false) => (!collectionPath ?\r\n    [undefined, false, new Error('useCollectionData: collectionPath not specified')] :\r\n    FirebaseFirestore.useCollectionData(\r\n        getCollection(collectionPath),\r\n        {\r\n            snapshotListenOptions: { includeMetadataChanges },\r\n        }\r\n    )\r\n)\r\n\r\nexport const useCollectionDataOnce = (collectionPath, includeMetadataChanges = false) => (!collectionPath ?\r\n    [undefined, false, new Error('useCollectionDataOnce: collectionPath not specified')] :\r\n    FirebaseFirestore.useCollectionDataOnce(\r\n        getCollection(collectionPath),\r\n        {\r\n            snapshotListenOptions: { includeMetadataChanges },\r\n        }\r\n    )\r\n)\r\n\r\nexport const getDocument = (documentPath) => getFirestore().doc(documentPath)\r\nexport const useDocument = (documentPath, includeMetadataChanges = false) => (!documentPath ?\r\n    [undefined, false, new Error('useDocument: documentPath was not specified')] :\r\n    FirebaseFirestore.useDocument(\r\n        getDocument(documentPath),\r\n        {\r\n            snapshotListenOptions: { includeMetadataChanges },\r\n        }\r\n    )\r\n)\r\n\r\nexport const useDocumentOnce = (documentPath, includeMetadataChanges = false) => (!documentPath ?\r\n    [undefined, false, new Error('useDocumentOnce: documentPath was not specified')] :\r\n    FirebaseFirestore.useDocumentOnce(\r\n        getDocument(documentPath),\r\n        {\r\n            snapshotListenOptions: { includeMetadataChanges },\r\n        }\r\n    )\r\n)\r\n\r\nexport const useDocumentData = (documentPath, includeMetadataChanges = false) => (!documentPath ?\r\n    [undefined, false, new Error('useDocumentData: documentPath was not specified')] :\r\n    FirebaseFirestore.useDocumentData(\r\n        getDocument(documentPath),\r\n        {\r\n            snapshotListenOptions: { includeMetadataChanges },\r\n        }\r\n    )\r\n)\r\n\r\nexport const useDocumentDataOnce = (documentPath, includeMetadataChanges = false) => (!documentPath ?\r\n    [undefined, false, new Error('useDocument: documentPath was not specified')] :\r\n    FirebaseFirestore.useDocumentDataOnce(\r\n        getDocument(documentPath),\r\n        {\r\n            snapshotListenOptions: { includeMetadataChanges },\r\n        }\r\n    )\r\n)\r\n\r\nexport const getData = (snapshot, orderBy, length, firstItem) => {\r\n    if (!orderBy)\r\n        return snapshot.query.get()\r\n    else if (!length)\r\n        return snapshot.query.orderBy(orderBy).get()\r\n    else if (!firstItem)\r\n        return snapshot.query.orderBy(orderBy).limitToLast(length).get()\r\n    else\r\n        return snapshot.query.orderBy(orderBy).limitToLast(length).startAt(firstItem).get()\r\n}\r\n\r\nexport const getDocumentsDataWithId = querySnapshot => {\r\n    let docs = [];\r\n    querySnapshot.docs.forEach((doc) => {\r\n        const data = doc.data()\r\n        // Adds the doc's id to it's own data\r\n        data.id = doc.id;\r\n        docs.push(data);\r\n    })\r\n    return docs;\r\n}\r\n\r\nexport const collectionContains = async (collection, docId) => {\r\n    const firestore = firebaseFirestore()\r\n    return await firestore.collection(collection).doc(\"ABC\").get()\r\n}\r\n\r\n// Returns a promise\r\nexport const callFirebaseFunction = (funcName, data) => {\r\n    return firebaseFunctions().httpsCallable(funcName)(data)\r\n}\r\n\r\nconst createFunctions = (communityId, chatRoomId) => {\r\n    const result = {}\r\n    result.functions = communityId\r\n    return result\r\n}\r\n\r\n// export const useFunctions = () => useReducer(reducer, createFunctions)\r\n\r\n// function reducer(state, action) {\r\n//     console.log(state)\r\n//     switch (action.type) {\r\n//         case 'invoke':\r\n//             console.log(\"invoke action\")\r\n//             return state\r\n//         default:\r\n//             return state\r\n//     }\r\n// }","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nexport const firebaseConfig = {\r\n    apiKey: \"AIzaSyBHpKV6SSJImZK1vJPGiJwKnogLBMkgfro\",\r\n    authDomain: \"cloud-lightning.firebaseapp.com\",\r\n    databaseURL: \"https://cloud-lightning.firebaseio.com\",\r\n    projectId: \"cloud-lightning\",\r\n    storageBucket: \"cloud-lightning.appspot.com\",\r\n    messagingSenderId: \"357266467361\",\r\n    appId: \"1:357266467361:web:627d7e1b7817256cfbd160\",\r\n    measurementId: \"G-CFXNQMD10X\"\r\n};","import React, { createContext, useState, useEffect } from 'react'\r\nimport { ActivityIndicator } from 'react-native'\r\nimport { useAuthState, callFirebaseFunction } from './Firebase'\r\n\r\nexport const FirebaseContext = createContext()\r\n\r\nexport const FirebaseProvider = ({ children }) => {\r\n    const [currentUser, loadingUser, errorUser] = useAuthState()\r\n    const [claims, setClaims] = useState({})\r\n    const [loadingClaims, setLoadingClaims] = useState(true)\r\n    const [userToken, setUserToken] = useState()\r\n\r\n    // User requires the .admin token to use this function\r\n    const getClaims = async uid => {\r\n        const result = await callFirebaseFunction('getClaims', {\r\n            userId: uid,\r\n            authToken: userToken,\r\n        })\r\n        return result.data.customClaims\r\n    }\r\n\r\n    // User requires the .admin token to use this function\r\n    const addClaim = async (uid, claimName) => {\r\n        const result = await callFirebaseFunction('modifyClaim', {\r\n            userId: uid,\r\n            authToken: userToken,\r\n            claim: claimName,\r\n            value: true,\r\n        })\r\n        return result.data\r\n    }\r\n\r\n    // User requires the .admin token to use this function\r\n    const removeClaim = async (uid, claimName) => {\r\n        const result = await callFirebaseFunction('modifyClaim', {\r\n            userId: uid,\r\n            authToken: userToken,\r\n            claim: claimName,\r\n        })\r\n        return result.data\r\n    }\r\n\r\n    const updateUserToken = async uid => {\r\n        if (!currentUser) {\r\n            setUserToken(undefined)\r\n            return\r\n        }\r\n\r\n        const token = await currentUser.getIdToken(true)\r\n        setUserToken(token)\r\n\r\n        const idTokenResult = await currentUser.getIdTokenResult()\r\n        if (idTokenResult.claims !== undefined)\r\n            setClaims(idTokenResult.claims)\r\n        setLoadingClaims(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateUserToken()\r\n    }, [currentUser])\r\n\r\n    const isLoading = loadingUser || loadingClaims\r\n    const error = errorUser\r\n\r\n    if (loadingUser)\r\n        return <ActivityIndicator />\r\n    else if (errorUser)\r\n        return <DisplayError\r\n            permissionDenied={(errorUser === 'permission-denied')}\r\n        />\r\n    return (\r\n        <FirebaseContext.Provider value={{\r\n            currentUser, claims, isLoading, error, addClaim, removeClaim, getClaims, userToken\r\n        }}>\r\n            {children}\r\n        </FirebaseContext.Provider>\r\n    )\r\n}\r\n","export const screen = {\r\n    Light: {\r\n        backgroundColor: '#ccc',\r\n        borderBottomColor: '#333'\r\n    },\r\n    Dark: {\r\n        backgroundColor: '#333',\r\n        borderBottomColor: '#eee'\r\n    }\r\n}\r\n\r\nexport const modal = {\r\n    Light: {\r\n        backgroundColor: '#ddd',\r\n        borderColor: '#333'\r\n    },\r\n    Dark: {\r\n        backgroundColor: '#246',\r\n        borderColor: '#eee'\r\n    }\r\n}\r\n\r\nexport const defaultView = {\r\n    Light: {\r\n        borderColor: \"black\",\r\n    },\r\n    Dark: {\r\n        borderColor: \"white\",\r\n    }\r\n}\r\n\r\nexport const container = {\r\n    Light: {\r\n        backgroundColor: '#ddd',\r\n        borderColor: 'black'\r\n    },\r\n    Dark: {\r\n        backgroundColor: '#212121',\r\n        borderColor: '#aaa'\r\n    }\r\n}\r\n\r\nexport const view = {\r\n    Light: {\r\n        borderColor: 'black'\r\n    },\r\n    Dark: {\r\n        borderColor: 'white'\r\n    }\r\n}\r\n\r\nexport const iconColor = {\r\n    Light: {\r\n        color: \"#555\",\r\n    },\r\n    Dark: {\r\n        color: \"red\",\r\n    }\r\n}\r\n\r\nexport const text = {\r\n    Light: {\r\n        color: \"#000\",\r\n    },\r\n    Dark: {\r\n        color: \"#eee\",\r\n    }\r\n}\r\n\r\nexport const helperText = {\r\n    Light: {\r\n        color: \"#400\",\r\n    },\r\n    Dark: {\r\n        color: \"#D00\",\r\n    }\r\n}\r\n\r\nexport const themedSwitch = {\r\n    Light: {\r\n        trackColorOn: '#81b0ff',\r\n        trackColorOff: '#767577',\r\n        thumbColorOn: '#ddd',\r\n        thumbColorOff: '#f4f3f4',\r\n        iosBackgroundColor: '#3e3e3e'\r\n    },\r\n    Dark: {\r\n        trackColorOn: '#22b0ff',\r\n        trackColorOff: '#767577',\r\n        thumbColorOn: '#fff',\r\n        thumbColorOff: '#f4f3f4',\r\n        iosBackgroundColor: '#3e3e3e'\r\n    }\r\n}\r\n\r\nexport const textInput = {\r\n    Light: {\r\n        color: \"#212121\",\r\n        backgroundColor: '#eee',\r\n    },\r\n    Dark: {\r\n        color: \"#eee\",\r\n        backgroundColor: '#333',\r\n    }\r\n}\r\n\r\nexport const placeHolderText = {\r\n    Light: {\r\n        color: \"#aaa\",\r\n    },\r\n    Dark: {\r\n        color: \"#888\",\r\n    }\r\n}\r\n\r\nexport const materialIcons = {\r\n    Light: {\r\n        color: \"#212121\",\r\n    },\r\n    Dark: {\r\n        color: \"#aaaaaa\",\r\n    }\r\n}\r\n\r\nexport const button = {\r\n    Light: {\r\n        color: \"white\",\r\n        backgroundColor: '#999',\r\n    },\r\n    Dark: {\r\n        color: \"#eee\",\r\n        backgroundColor: '#899eec',\r\n    }\r\n}\r\n\r\nexport const buttonDisabled = {\r\n    Light: {\r\n        color: \"#aaa\",\r\n        backgroundColor: '#444',\r\n    },\r\n    Dark: {\r\n        color: \"#999\",\r\n        backgroundColor: '#777',\r\n    }\r\n}\r\n\r\nexport const picker = {\r\n    Light: {\r\n        color: \"#888\",\r\n        backgroundColor: '#eee',\r\n    },\r\n    Dark: {\r\n        color: \"#eee\",\r\n        backgroundColor: '#222',\r\n    }\r\n}\r\n\r\nexport const pickerDisabled = {\r\n    Light: {\r\n        color: \"#444\",\r\n        backgroundColor: '#aaa',\r\n    },\r\n    Dark: {\r\n        color: \"#999\",\r\n        backgroundColor: '#777',\r\n    }\r\n}\r\n\r\nexport const tabNavigator = {\r\n    Light: {\r\n        activeTintColor: '#246',\r\n        inactiveTintColor: '#468',\r\n        activeBackgroundColor: '#ddd',\r\n        inactiveBackgroundColor: '#bbb',\r\n    },\r\n    Dark: {\r\n        activeTintColor: '#eee',\r\n        inactiveTintColor: 'gray',\r\n        activeBackgroundColor: '#555',\r\n        inactiveBackgroundColor: '#444',\r\n    }\r\n}","import { StyleSheet } from 'react-native'\r\n\r\nexport const view = StyleSheet.create({\r\n    default: {\r\n\r\n    }\r\n})\r\n\r\nexport const themedSwitch = StyleSheet.create({\r\n    default: {\r\n\r\n    }\r\n})\r\n\r\nexport const displayError = StyleSheet.create({\r\n    header: {\r\n        paddingTop: 5,\r\n        fontSize: 18,\r\n        fontWeight: '600'\r\n    },\r\n    text: {\r\n        paddingTop: 5,\r\n        paddingLeft: 10,\r\n        fontSize: 14,\r\n        fontWeight: '600'\r\n    }\r\n})\r\n\r\nexport const materialIcons = StyleSheet.create({\r\n    icons: {\r\n        paddingHorizontal: 3\r\n    },\r\n})\r\n\r\nexport const modal = StyleSheet.create({\r\n    content: {\r\n        width: 350\r\n    }\r\n})\r\n\r\nexport const auth = StyleSheet.create({\r\n    logo: {\r\n        flex: 1,\r\n        height: 180,\r\n        width: 180,\r\n        alignSelf: \"center\",\r\n        margin: 30\r\n    },\r\n    footerView: {\r\n        flex: 1,\r\n        alignSelf: \"center\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginTop: 20\r\n    },\r\n})\r\n\r\nexport const views = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        paddingBottom: 2\r\n    },\r\n    activityIndicator: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    scrollView: {\r\n        flex: 1,\r\n    },\r\n    flexRowJustifyCenter: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'center'\r\n    },\r\n    filletedBorderView: {\r\n        flex: 1,\r\n        margin: 0,\r\n        padding: 5,\r\n        borderWidth: 1,\r\n        borderRadius: 5,\r\n        width: \"100%\"\r\n    },\r\n    flatList: {\r\n\r\n    }\r\n})\r\n\r\nexport const button = StyleSheet.create({\r\n    native: {\r\n\r\n    },\r\n    touchable: {\r\n        borderRadius: 5,\r\n        paddingVertical: 5,\r\n        paddingHorizontal: 10,\r\n        alignItems: 'center'\r\n    },\r\n    text: {\r\n        fontWeight: '600'\r\n    }\r\n})\r\n\r\nexport const container = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        //alignItems: 'center',\r\n        borderRadius: 5\r\n    },\r\n    scrollView: {\r\n        width: \"100%\",\r\n    }\r\n})\r\n\r\nexport const infiniteScroll = StyleSheet.create({\r\n    view: {\r\n        flex: 1,\r\n        margin: 5,\r\n        padding: 5,\r\n        borderWidth: 1,\r\n        borderRadius: 5,\r\n        width: \"100%\"\r\n    }\r\n})\r\n\r\nexport const textInput = StyleSheet.create({\r\n    input: {\r\n        height: 32,\r\n        borderRadius: 5,\r\n        overflow: 'hidden',\r\n        marginTop: 5,\r\n        marginHorizontal: 5,\r\n        paddingLeft: 10\r\n    },\r\n})\r\n\r\nexport const picker = StyleSheet.create({\r\n    toggleBox: {\r\n        backgroundColor: '#ddd',\r\n        borderColor: 'rgb(178,181,189)',\r\n        borderBottomWidth: 1,\r\n    },\r\n    picker: {\r\n        margin: 5,\r\n        backgroundColor: '#fff',\r\n        paddingHorizontal: 2\r\n    },\r\n    item: {\r\n\r\n    }\r\n})\r\n\r\nexport const logoutModal = StyleSheet.create({\r\n    text: {\r\n        fontSize: 16,\r\n        fontWeight: '600',\r\n        marginBottom: 10\r\n    },\r\n    buttonView: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center'\r\n    },\r\n    button: {\r\n        marginTop: 5,\r\n        marginHorizontal: 10\r\n    }\r\n})\r\n\r\nexport const messenger = StyleSheet.create({\r\n    viewChat: {\r\n        flex: 1,\r\n        margin: 5,\r\n        padding: 5,\r\n        borderWidth: 1,\r\n        borderRadius: 5,\r\n        width: \"100%\"\r\n    },\r\n    views: {\r\n        flexDirection: 'row',\r\n        //alignContent: 'stretch',\r\n        width: \"100%\",\r\n        borderWidth: 1,\r\n        borderRadius: 5,\r\n        borderBottomWidth: 0,\r\n        borderTopWidth: 0,\r\n    },\r\n    flatList: {\r\n\r\n    },\r\n    textInput: {\r\n        flex: 5,\r\n        height: 35,\r\n        marginLeft: 5,\r\n        marginVertical: 5,\r\n    },\r\n    sendButton: {\r\n        flex: 1,\r\n        marginRight: 5,\r\n        marginVertical: 5,\r\n        height: 35,\r\n    }\r\n})","export const playgroundMode = false\r\nexport const defaultTheme = 'Light'","import React, { createContext, useState, useEffect } from 'react'\r\nimport * as ScreenOrientation from 'expo-screen-orientation';\r\nimport { useComponentMounted, useComponentUnmounting } from 'react-use-lifecycles'\r\nimport { Defaults } from './Constants'\r\n\r\nexport const GlobalContext = createContext();\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [theme, setTheme] = useState(Defaults.defaultTheme)\r\n    const [screenOrientation, setScreenOrientation] = useState(ScreenOrientation.Orientation.UNKNOWN)\r\n\r\n    // setState( state => ({ key: value }))\r\n\r\n    // Screen orientation state handling\r\n    useComponentMounted(() => {\r\n        ScreenOrientation.unlockAsync()\r\n            .catch(err => console.warn(err))\r\n        ScreenOrientation.getOrientationAsync()\r\n            .then(value => {\r\n                setScreenOrientation(value)\r\n                ScreenOrientation.lockAsync(value)\r\n                    .catch(err => console.warn(err))\r\n            })\r\n            .catch(err => console.warn(err))\r\n\r\n        ScreenOrientation.addOrientationChangeListener(\r\n            value => setScreenOrientation(value.orientationInfo.orientation)\r\n        )\r\n    })\r\n\r\n    useComponentUnmounting(() => ScreenOrientation.removeOrientationChangeListeners())\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{ theme, setTheme, screenOrientation }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n","import React, { useContext, useRef, useEffect } from 'react'\r\nimport { Text, View, StyleSheet } from 'react-native'\r\nimport { GlobalContext } from '../shared/GlobalContext'\r\nimport { Themes } from '../shared/Constants'\r\n\r\nexport default ({ children, style, classRef, fontWeight, fontSize, ...restProps }) => {\r\n    const { theme } = useContext(GlobalContext)\r\n\r\n    // Setup defaults\r\n    if (!fontWeight) { fontWeight = \"200\" }\r\n    if (!fontSize) { fontSize = 14 }\r\n\r\n    return (\r\n        <Text\r\n            {...restProps}\r\n            ref={classRef}\r\n            style={[Themes.text[theme], {\r\n                fontWeight: fontWeight, // String\r\n                fontSize: fontSize,     // Integer\r\n            }, style]}\r\n            selectable={false}\r\n        >\r\n            {children}\r\n        </Text>\r\n    )\r\n}\r\n\r\n","import React, { useContext, useRef } from 'react'\r\nimport { View, SafeAreaView } from 'react-native'\r\nimport { GlobalContext } from '../shared/GlobalContext'\r\nimport { Themes, Styles } from '../shared/Constants'\r\n\r\nexport default ({ children, style, isSafe }) => {\r\n    const { theme } = useContext(GlobalContext)\r\n\r\n    if (isSafe)\r\n        return (\r\n            <SafeAreaView style={[Styles.container.container, Themes.container[theme], style]} >\r\n                {children}\r\n            </SafeAreaView>\r\n        )\r\n\r\n    // Default Container\r\n    return (\r\n        <View style={[Styles.container.container, Themes.container[theme], style]}>\r\n            {children}\r\n        </View>\r\n    )\r\n}\r\n","import React, { useContext, useRef, useEffect, Component, PureComponent } from 'react'\r\nimport { TextInput } from 'react-native'\r\nimport { GlobalContext } from '../shared/GlobalContext'\r\nimport { Themes, Styles } from '../shared/Constants'\r\n\r\nexport default ({ children, style, classRef, ...restProps }) => {\r\n    const { theme } = useContext(GlobalContext)\r\n\r\n    return (\r\n        // Anything before restProps are defaults, can be overwritten by restProps\r\n        <TextInput\r\n            autoCompleteType={'off'}\r\n            autoComplete={false}\r\n            autoCapitalize=\"none\"\r\n            autoCorrect={false}\r\n            underlineColorAndroid=\"transparent\"\r\n            {...restProps}\r\n            ref={classRef}\r\n            style={[Styles.textInput.input, Themes.textInput[theme], style]}\r\n            placeholderTextColor={Themes.placeHolderText[theme].color}\r\n        >\r\n            {children}\r\n        </TextInput>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Button, TouchableOpacity } from 'react-native'\r\nimport { Text } from './Components'\r\nimport { GlobalContext } from '../shared/GlobalContext'\r\nimport { Themes, Styles } from '../shared/Constants'\r\n\r\nexport default ({ style, title, disabled, reactNativeButton, ...restProps }) => {\r\n    const { theme } = useContext(GlobalContext)\r\n    const properTheme = !disabled ? Themes.button[theme] : Themes.buttonDisabled[theme]\r\n\r\n    // Use the native button\r\n    if (reactNativeButton) {\r\n        return (\r\n            <Button\r\n                title={title}\r\n                disabled={disabled}\r\n                style={[Styles.button.native, properTheme, style]}\r\n                {...restProps}\r\n            />\r\n        )\r\n    }\r\n    // TouchableHighlight is another option, this works nice though\r\n    return (\r\n        <TouchableOpacity\r\n            disabled={disabled}\r\n            style={[Styles.button.touchable, properTheme, style]}\r\n            {...restProps}\r\n        >\r\n            <Text style={[properTheme, Styles.button.text]} >{title}</Text>\r\n        </TouchableOpacity>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useState, useContext } from 'react';\r\nimport { View, useWindowDimensions } from 'react-native'\r\nimport { GlobalContext } from '../shared/GlobalContext'\r\nimport { Header } from \"react-native-elements\";\r\nimport { Image, Text, MaterialIcons } from './Components'\r\nimport { LogoutModal } from '../Authentication'\r\nimport { Themes, Styles } from '../shared/Constants'\r\n\r\nexport default ({ navigation, title, photoURL, hasDrawerNavigation = true, hasHome, hasBack, hasLogout = true }) => {\r\n    const { theme, setTheme } = useContext(GlobalContext)\r\n    const [showLogoutModal, setShowLogoutModal] = useState(false)\r\n\r\n    const toggleDarkMode = () => {\r\n        if (theme === \"Dark\") {\r\n            setTheme(\"Light\")\r\n        } else {\r\n            setTheme(\"Dark\")\r\n        }\r\n    }\r\n\r\n    const iconSize = 28\r\n\r\n    return (\r\n        <>\r\n            <LogoutModal\r\n                shown={showLogoutModal}\r\n                navigation={navigation}\r\n                dismiss={() => setShowLogoutModal(false)}\r\n            />\r\n            <Header\r\n                containerStyle={{\r\n                    width: \"100%\",\r\n                    borderBottomColor: Themes.screen[theme].borderBottomColor\r\n                }}\r\n                backgroundColor='none'\r\n                backgroundImageStyle={{}}\r\n                centerComponent={() =>\r\n                    <Text fontWeight=\"600\" fontSize={20}>{title}</Text>\r\n                }\r\n                leftComponent={() =>\r\n                    <View style={{ flexDirection: 'row' }}>\r\n                        {(hasDrawerNavigation) ?\r\n                            <MaterialIcons\r\n                                name=\"menu\"\r\n                                size={iconSize}\r\n                                onPress={navigation.openDrawer} />\r\n                            : <></>}\r\n                        {(hasHome) ?\r\n                            <MaterialIcons\r\n                                name=\"home\"\r\n                                size={iconSize}\r\n                                onPress={() => navigation.popToTop()} />\r\n                            : <></>}\r\n                        {(hasBack) ?\r\n                            <MaterialIcons\r\n                                name=\"navigate-before\"\r\n                                size={iconSize}\r\n                                onPress={() => navigation.pop()} />\r\n                            : <></>}\r\n                    </View>\r\n                }\r\n                leftContainerStyle={{}}\r\n                placement=\"center\"\r\n                rightComponent={() =>\r\n                    <View style={{ flexDirection: 'row' }}>\r\n                        <MaterialIcons\r\n                            name=\"settings-brightness\"\r\n                            size={iconSize}\r\n                            onPress={toggleDarkMode} />\r\n                        {hasLogout ?\r\n                            (photoURL ?\r\n                                <Image\r\n                                    source={{ uri: photoURL }}\r\n                                    style={{ width: 28, height: 28, borderRadius: '50%' }}\r\n                                    onPress={() => setShowLogoutModal(true)}\r\n                                /> :\r\n                                <MaterialIcons\r\n                                    name=\"face\"\r\n                                    size={iconSize}\r\n                                    onPress={() => setShowLogoutModal(true)}\r\n                                />\r\n                            )\r\n                            : <></>\r\n                        }\r\n                    </View>\r\n                }\r\n                rightContainerStyle={{}}\r\n                statusBarProps={{}}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { View } from 'react-native'\r\nimport { GlobalContext } from '../shared/GlobalContext'\r\nimport { FirebaseContext } from '../firebase/FirebaseContext'\r\nimport { Themes, Styles } from '../shared/Constants'\r\nimport ScreenHeader from './ScreenHeader'\r\n\r\nexport default ({ children, style, navigation, ...restProps }) => {\r\n    const { theme } = useContext(GlobalContext)\r\n    const { currentUser } = useContext(FirebaseContext)\r\n\r\n    return (\r\n        <View style={[Styles.views.screen, Themes.screen[theme], style]}>\r\n            <ScreenHeader navigation={navigation} photoURL={currentUser && currentUser.photoURL} {...restProps} />\r\n            {children}\r\n        </View>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { View } from 'react-native'\r\nimport { Themes, Styles } from '../shared/Constants'\r\nimport { GlobalContext } from '../shared/GlobalContext'\r\n\r\nexport default ({ children, style, ...restProps }) => {\r\n    const { theme } = useContext(GlobalContext)\r\n\r\n    return (\r\n        <View style={[Styles.view.default, Themes.view[theme], style]} {...restProps}>\r\n            {children}\r\n        </View>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ActivityIndicator } from 'react-native'\r\nimport { Styles } from '../shared/Constants'\r\nimport View from './View'\r\n\r\nexport default () => {\r\n    return (\r\n        <View style={Styles.views.activityIndicator}>\r\n            <ActivityIndicator size=\"large\" />\r\n        </View>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Container from './Container'\r\nimport Text from './Text'\r\nimport { Styles } from '../shared/Constants'\r\n\r\nexport default ({ permissionDenied, error }) => {\r\n    let errorMessage = error ? error.message : undefined\r\n    let errorMessageText = permissionDenied ? 'Permission Denied' : errorMessage\r\n    console.error(error)\r\n    return (\r\n        <Container style={Styles.views.filletedBorderView}>\r\n            <Text style={Styles.displayError.header}>\r\n                Sorry, an {!errorMessageText ? 'unknown error' : 'error'} has occurred\r\n            </Text>\r\n            {errorMessageText &&\r\n                <Text style={Styles.displayError.text}>\r\n                    {errorMessageText}\r\n                </Text>\r\n            }\r\n        </Container>\r\n    )\r\n}","import React, { useState, useEffect, useRef, useContext } from 'react'\r\nimport { StyleSheet, FlatList, View } from 'react-native'\r\nimport { useCollection, getDocumentsDataWithId, getData } from './Firebase'\r\nimport { Themes, Styles } from '../shared/Constants'\r\nimport { GlobalContext } from '../shared/GlobalContext'\r\nimport ActivityIndicator from '../themed/ActivityIndicator'\r\nimport DisplayError from '../themed/DisplayError'\r\n\r\n// Ref: For loading more, pull small chunks https://youtu.be/WcGd8VkRc48?t=237\r\n\r\nconst getTime = () => {\r\n    let tmpDate = new Date(Date.now())\r\n    return tmpDate.getTime()\r\n}\r\n\r\nconst CollectionFlatList = props => {\r\n    const flatList = useRef()\r\n    const { style, messages, onScrollProp = onScroll, onStartReached, autoScrollToEnd, ...restProps } = props\r\n    const [hitTop, setHitTop] = useState(state => ({}))\r\n    const [refreshing, setRefreshing] = useState(false)\r\n    const { theme } = useContext(GlobalContext)\r\n\r\n    const onScroll = (e) => {\r\n        const { contentOffset, contentSize, layoutMeasurement } = e.nativeEvent\r\n        const maxY = Math.round(contentSize.height - layoutMeasurement.height)\r\n        const maxX = Math.round(contentSize.width - layoutMeasurement.width)\r\n\r\n        if (contentOffset.y === 0) setHitTop({})\r\n        if (onScrollProp) onScrollProp(e)\r\n    }\r\n    const onContentSizeChange = (e, f) => {\r\n        if (autoScrollToEnd && !refreshing)\r\n            flatList.current.scrollToEnd({ animated: false })\r\n    }\r\n    const onLayout = ({ nativeEvent }) => {\r\n        if (autoScrollToEnd && !refreshing)\r\n            flatList.current.scrollToEnd({ animated: false })\r\n    }\r\n    const onRefresh = (e) => {\r\n        console.log(e)\r\n    }\r\n    const loadMoreMessages = () => {\r\n        console.log(\"loadMoreMessages() : Start\")\r\n        setRefreshing(true)\r\n\r\n        // each new message increases the viewLength by 1\r\n        messengerDispatch({\r\n            type: 'incrementViewLength',\r\n            amount: 25\r\n        })\r\n        updateMessages()\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        typeof onStartReached === 'function' && onStartReached()\r\n    }, [hitTop])\r\n\r\n    return (\r\n        <View style={[Styles.views.filletedBorderView, Themes.defaultView[theme], style]}>\r\n            <FlatList\r\n                {...restProps}\r\n                ref={flatList}\r\n                removeClippedSubviews={true}\r\n                contentContainerStyle={Styles.views.flatList}\r\n                data={messages}\r\n                onStartReached={loadMoreMessages}\r\n                onLayout={onLayout}\r\n                onContentSizeChange={onContentSizeChange}\r\n                onScroll={onScroll}\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default ({ collectionPath, orderBy, initialNumToRender, ...restProps }) => {\r\n    const [snapshot, loadingCollection, errorCollection] = useCollection(collectionPath)\r\n    const [messages, setMessages] = useState([])\r\n    const [loadingData, setDataLoading] = useState(true)\r\n    const [errorData, setDataError] = useState(false)\r\n\r\n    const fetchData = () => {\r\n        getData(snapshot, orderBy).then((querySnapshot) => {\r\n            setMessages(getDocumentsDataWithId(querySnapshot))\r\n            setDataLoading(false)\r\n        }).catch((e) => {\r\n            setDataError(e)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!loadingCollection && !errorCollection && snapshot)\r\n            fetchData()\r\n    }, [snapshot])\r\n\r\n    if (errorCollection || errorData) {\r\n        let errorCollectionCode = errorCollection ? errorCollection.code : null\r\n        let errorDataCode = errorData ? errorData.code : null\r\n        return <DisplayError\r\n            permissionDenied={(errorCollectionCode === 'permission-denied' || errorDataCode === 'permission-denied')}\r\n            error={errorCollection || errorData}\r\n        />\r\n    } else if (!loadingCollection && !loadingData) {\r\n        return <CollectionFlatList messages={messages} {...restProps} />\r\n    }\r\n    return <ActivityIndicator />\r\n}\r\n","import React, { useState, useEffect, useMemo, useRef } from 'react'\r\nimport { StyleSheet, FlatList, VirtualizedList, ScrollView, View, AppLoading } from 'react-native'\r\nimport { useDocumentData } from './Firebase'\r\nimport ActivityIndicator from '../themed/ActivityIndicator'\r\nimport DisplayError from '../themed/DisplayError'\r\nimport Text from '../themed/Text'\r\n\r\nconst DocumentFlatList = props => {\r\n    const flatList = useRef()\r\n    const { data, onScrollProp = onScroll, onStartReached, autoScrollToEnd, ...restProps } = props;\r\n    const [yScroll, setYScroll] = useState(-1)\r\n\r\n    const onScroll = (e) => {\r\n        const { contentOffset, contentSize, layoutMeasurement } = e.nativeEvent\r\n        const maxY = Math.round(contentSize.height - layoutMeasurement.height)\r\n        const maxX = Math.round(contentSize.width - layoutMeasurement.width)\r\n\r\n        setYScroll(contentOffset.y)\r\n        if (onScrollProp) onScrollProp(e)\r\n    }\r\n    const onContentSizeChange = (e, f) => {\r\n        if (autoScrollToEnd && !refreshing)\r\n            flatList.current.scrollToEnd({ animated: false })\r\n    }\r\n    const onLayout = ({ nativeEvent }) => {\r\n        const { layout, target } = nativeEvent\r\n        if (autoScrollToEnd && !refreshing)\r\n            flatList.current.scrollToEnd({ animated: false })\r\n    }\r\n    const onRefresh = (e) => {\r\n        console.log(e)\r\n    }\r\n\r\n    const loadMoreMessages = () => {\r\n        console.log(\"loadMoreMessages() : Start\")\r\n        setRefreshing(true)\r\n\r\n        // each new message increases the viewLength by 1\r\n        messengerDispatch({\r\n            type: 'incrementViewLength',\r\n            amount: 25\r\n        })\r\n        updateMessages()\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (yScroll === 0 && onStartReached) {\r\n            onStartReached()\r\n        }\r\n    }, [yScroll])\r\n\r\n    return (\r\n        <View style={styles.view}>\r\n            <FlatList\r\n                {...restProps}\r\n                ref={flatList}\r\n                data={data}\r\n                onStartReached={loadMoreMessages}\r\n                onLayout={onLayout}\r\n                onContentSizeChange={onContentSizeChange}\r\n                onScroll={onScroll}\r\n                onRefresh={onRefresh}\r\n                refreshing={refreshing}\r\n                removeClippedSubviews={true}\r\n                contentContainerStyle={styles.flatlist}\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default ({ documentPath, orderBy, initialNumToRender, ...restProps }) => {\r\n    const [data, loadingData, errorData] = useDocumentData(documentPath)\r\n\r\n    let render = <ActivityIndicator />\r\n    if (errorData) {\r\n        let errorDataCode = errorData ? errorData.code : null\r\n        render =\r\n            <DisplayError\r\n                permissionDenied={(errorDataCode === 'permission-denied')}\r\n            />\r\n    } else if (!loadingData) {\r\n        render =\r\n            <DocumentFlatList data={data.recentMessages} {...restProps} />\r\n    }\r\n    return (\r\n        <>{render}</>\r\n    )\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    view: {\r\n        flex: 1,\r\n        margin: 5,\r\n        padding: 5,\r\n        borderWidth: 1,\r\n        borderRadius: 5,\r\n        borderColor: \"#48a\",\r\n        width: \"100%\"\r\n    }\r\n})","import React, { useContext } from 'react'\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\r\nimport { GlobalContext } from '../shared/GlobalContext'\r\nimport { Themes, Styles } from '../shared/Constants'\r\n\r\nexport default ({ children, style, navigation, ...restProps }) => {\r\n    const { theme } = useContext(GlobalContext)\r\n\r\n    return (\r\n        <KeyboardAwareScrollView\r\n            style={[Styles.views.scrollView, Themes.screen[theme], style]}\r\n            {...restProps}\r\n        >\r\n            {children}\r\n        </KeyboardAwareScrollView>\r\n    )\r\n}","import React, { useContext } from 'react'\r\nimport { Modal, ModalContent } from 'react-native-modals';\r\nimport { GlobalContext } from '../shared/GlobalContext'\r\nimport { Themes, Styles } from '../shared/Constants'\r\n\r\nexport default ({ children, style, ...restProps }) => {\r\n    const { theme } = useContext(GlobalContext)\r\n\r\n    return (\r\n        <Modal {...restProps} >\r\n            <ModalContent style={[Styles.modal.content, Themes.modal[theme], style]}>\r\n                {children}\r\n            </ModalContent>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport { ScrollView, Platform } from 'react-native'\r\nimport { GlobalContext } from '../shared/GlobalContext'\r\nimport { Themes, Styles } from '../shared/Constants'\r\nimport { Picker, PickerIOS } from '@react-native-picker/picker'\r\nimport ToggleBox from 'react-native-togglebox'\r\n\r\nexport default ({ style, data = [], selectedIndex = 0, onValueChanged, ...restProps }) => {\r\n    const { theme } = useContext(GlobalContext)\r\n    const [selectedValue, setSelectedValue] = useState()\r\n    const [selectedItem, setSelectedItem] = useState()\r\n    //const properTheme = enabled ? Themes.picker[theme] : Themes.pickerDisabled[theme]\r\n\r\n    useEffect(() => {\r\n        setSelectedItem(data?.[selectedIndex])\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        typeof onValueChanged === 'function' && onValueChanged(selectedItem)\r\n    }, [selectedItem])\r\n\r\n    const PickerCommon = () =>\r\n        <Picker\r\n            style={[Styles.picker.picker, Themes.picker[theme], style]}\r\n            {...restProps}\r\n            selectedValue={selectedValue}\r\n            onValueChange={(value, index) => {\r\n                setSelectedValue(value)\r\n                setSelectedItem(data?.[index])\r\n            }}\r\n        >\r\n            {\r\n                data.map(item => {\r\n                    return (\r\n                        <Picker.Item\r\n                            style={Styles.picker.item}\r\n                            label={item?.label || item}\r\n                            value={item?.value}\r\n                            key={item?.value || item}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </Picker>\r\n\r\n    return (\r\n        <ScrollView bounces={false}>\r\n            {(Platform.OS === 'ios') &&\r\n                <ToggleBox\r\n                    label={\r\n                        (selectedItem && selectedItem.label) ? selectedItem.label :\r\n                            selectedItem ? selectedItem : ''\r\n                    }\r\n                    style={Styles.picker.toggleBox}>\r\n                    <PickerCommon />\r\n                </ToggleBox>\r\n            }\r\n            {(Platform.OS !== 'ios') &&\r\n                <PickerCommon />\r\n            }\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React, { useContext } from 'react'\r\nimport { MaterialIcons } from '@expo/vector-icons'\r\nimport { GlobalContext } from '../shared/GlobalContext'\r\nimport { Themes, Styles } from '../shared/Constants'\r\n\r\nexport default ({ style, ...restProps }) => {\r\n    const { theme } = useContext(GlobalContext)\r\n    //const properTheme = !disabled ? Themes.button[theme] : Themes.buttonDisabled[theme]\r\n\r\n    const iconColor = Themes.materialIcons[theme].color\r\n\r\n    return (\r\n        <MaterialIcons\r\n            style={[Styles.materialIcons.icons, style]}\r\n            color={iconColor}\r\n            selectable={false}\r\n            {...restProps}\r\n        />\r\n    )\r\n}\r\n\r\n\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { Switch } from 'react-native'\r\nimport { Styles, Themes } from '../shared/Constants'\r\nimport { GlobalContext } from '../shared/GlobalContext'\r\n\r\nexport default ({ children, style, value, onChange, classRef, ...restProps }) => {\r\n    const { theme } = useContext(GlobalContext)\r\n\r\n    const trackColor = {\r\n        false: Themes.themedSwitch[theme].trackColorOff,\r\n        true: Themes.themedSwitch[theme].trackColorOn\r\n    }\r\n    const thumbColor = value ?\r\n        Themes.themedSwitch[theme].thumbColorOn :\r\n        Themes.themedSwitch[theme].thumbColorOff\r\n\r\n    return (\r\n        <Switch style={[Styles.themedSwitch.default, style]}\r\n            {...restProps}\r\n            ref={classRef}\r\n            trackColor={trackColor}\r\n            thumbColor={thumbColor}\r\n            ios_backgroundColor={Themes.themedSwitch[theme].iosBackgroundColor}\r\n            onValueChange={onChange}\r\n            value={value}\r\n        >\r\n            {children}\r\n        </Switch>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Styles } from '../shared/Constants'\r\nimport View from './View'\r\nimport Switch from './Switch'\r\nimport Text from './Text'\r\nimport { ActivityIndicator } from 'react-native'\r\n\r\nexport default ({ label, viewStyle, textStyle, isLoading, ...restProps }) => {\r\n    return (\r\n        <View style={[Styles.views.flexRowJustifyCenter, viewStyle]}>\r\n            {label && <Text style={[{ marginRight: 10 }, textStyle]}>{label}</Text>}\r\n            {isLoading ? <ActivityIndicator {...restProps} /> : <Switch {...restProps} />}\r\n        </View>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TouchableOpacity, Image } from 'react-native'\r\n\r\nexport default ({ disabled, onPress, ...restProps }) => {\r\n    return (\r\n        <TouchableOpacity\r\n            disabled={disabled}\r\n            onPress={onPress}\r\n        >\r\n            <Image {...restProps} />\r\n        </TouchableOpacity>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport { Image, Platform } from 'react-native'\r\nimport { Container, Text, TextInput, Button, ScrollView, View, Modal, ActivityIndicator, DisplayError } from './themed/Components'\r\nimport { firebaseAuth, GoogleAuthProvider } from './firebase/Firebase'\r\nimport { Styles, Themes } from './shared/Constants'\r\nimport { GlobalContext } from './shared/GlobalContext'\r\n\r\nexport const LogoutModal = ({ navigation, shown, dismiss }) => {\r\n    const firebaseLogout = () => {\r\n        firebaseAuth().signOut().then(() => {\r\n            navigation.replace('Authentication')\r\n        }).catch(error => {\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            visible={shown}\r\n            onTouchOutside={() => dismiss && dismiss()}\r\n        >\r\n            <Text style={Styles.logoutModal.text}>\r\n                Are you sure you want to logout?\r\n            </Text>\r\n            <View style={Styles.logoutModal.buttonView}>\r\n                <Button\r\n                    style={Styles.logoutModal.button}\r\n                    title='Yes'\r\n                    onPress={firebaseLogout}\r\n                />\r\n                <Button\r\n                    style={Styles.logoutModal.button}\r\n                    title='No'\r\n                    onPress={() => dismiss && dismiss()}\r\n                />\r\n            </View>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport const Authentication = ({ navigation, customToken }) => {\r\n    const [fullName, setFullName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [passwordResetModalVisible, setPasswordResetModalVisible] = useState(false)\r\n    const [isValidEMail, setIsValidEMail] = useState(false)\r\n    const [isRegistering, setIsRegistering] = useState(false)\r\n    const [submitted, setSubmitted] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [error, setError] = useState(null)\r\n    const { theme, setTheme } = useContext(GlobalContext)\r\n    const auth = firebaseAuth()\r\n\r\n    useEffect(() => {\r\n        if (theme === 'Dark')\r\n            setTheme('Light')\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (customToken) {\r\n            auth\r\n                .signInWithCustomToken(customToken)\r\n                .then(() => {\r\n                    navigation.replace(\"Main\")\r\n                })\r\n                .catch(error => {\r\n                    alert(\"Invalid custom token specified\")\r\n                    setIsLoading(false)\r\n                })\r\n        } else {\r\n            setIsLoading(false)\r\n        }\r\n    }, [])\r\n\r\n    const onSignUpPress = () => {\r\n        setIsRegistering(true)\r\n    }\r\n\r\n    const onGotoLoginPress = () => {\r\n        setIsRegistering(false)\r\n    }\r\n\r\n    const onRegisterPress = () => {\r\n        if (password !== confirmPassword) {\r\n            alert(\"Passwords don't match.\")\r\n        } else {\r\n            auth\r\n                .createUserWithEmailAndPassword(email, password)\r\n                .then(() => {\r\n                    navigation.replace(\"Main\")\r\n                })\r\n                .catch((error) => {\r\n                    alert(error)\r\n                })\r\n        }\r\n    }\r\n\r\n    const onPasswordKeyPress = ({ key }) => {\r\n        if (key != 'Enter') return\r\n        onLoginPress()\r\n    }\r\n\r\n    const signInWithGoogle = () => {\r\n        const provider = new GoogleAuthProvider()\r\n        auth.signInWithRedirect(provider)\r\n            .then(() => {\r\n                navigation.replace(\"Main\")\r\n            })\r\n            .catch(error => {\r\n                alert(error)\r\n            })\r\n    }\r\n\r\n    const onLoginPress = () => {\r\n        auth\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(() => {\r\n                navigation.replace(\"Main\")\r\n            })\r\n            .catch(error => {\r\n                alert(error)\r\n            })\r\n    }\r\n\r\n    const sendPasswordReset = () => {\r\n        if (isValidEMail) {\r\n            console.log(`Send Password reset to: ${email}`)\r\n            setSubmitted(true)\r\n            auth\r\n                .sendPasswordResetEmail(email)\r\n                .then(() => {\r\n                    setPasswordResetModalVisible(false)\r\n                    setSubmitted(false)\r\n                })\r\n                .catch(error => {\r\n                    alert(error)\r\n                    setSubmitted(false)\r\n                })\r\n        }\r\n    }\r\n\r\n    const onPasswordResetPress = () => {\r\n        setPasswordResetModalVisible(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const emailRegEx = /^[a-zA-Z0-9]+@(?:[a-zA-Z0-9]+\\.)+[A-Za-z]+$/\r\n        setIsValidEMail(email.match(emailRegEx))\r\n    }, [email])\r\n\r\n    if (isLoading) {\r\n        return <ActivityIndicator />\r\n    } else if (error) {\r\n        const message = error.message ? error.message : error\r\n        return <DisplayError errorMessage={message} />\r\n    } else {\r\n        return (\r\n            <>\r\n                <Modal\r\n                    visible={passwordResetModalVisible}\r\n                    onTouchOutside={() => {\r\n                        setPasswordResetModalVisible(false)\r\n                    }}\r\n                    style={{\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        margin: 0\r\n                    }}\r\n                >\r\n                    <TextInput\r\n                        placeholder='E-mail'\r\n                        onChangeText={(text) => setEmail(text)}\r\n                        value={email}\r\n                    />\r\n                    <Button\r\n                        disabled={submitted || !isValidEMail}\r\n                        title='Reset Password'\r\n                        onPress={sendPasswordReset}\r\n                        style={{ marginTop: 5 }}\r\n                    />\r\n                </Modal>\r\n                <Container>\r\n                    <ScrollView bounces={false}\r\n                        style={{ flex: 1, width: '100%' }}\r\n                        keyboardShouldPersistTaps=\"always\">\r\n\r\n                        <Image\r\n                            style={Styles.auth.logo}\r\n                            source={require('../assets/icon.png')}\r\n                        />\r\n                        {isRegistering &&\r\n                            <TextInput\r\n                                placeholder='Full Name'\r\n                                onChangeText={(text) => setFullName(text)}\r\n                                value={fullName}\r\n                            />\r\n                        }\r\n                        <TextInput\r\n                            placeholder='E-mail'\r\n                            onChangeText={(text) => setEmail(text)}\r\n                            value={email}\r\n                        />\r\n                        <TextInput\r\n                            secureTextEntry\r\n                            placeholder='Password'\r\n                            onChangeText={(text) => setPassword(text)}\r\n                            onKeyPress={onPasswordKeyPress}\r\n                            value={password}\r\n                        />\r\n                        {isRegistering &&\r\n                            <TextInput\r\n                                secureTextEntry\r\n                                placeholder='Confirm Password'\r\n                                onChangeText={(text) => setConfirmPassword(text)}\r\n                                value={confirmPassword}\r\n                            />\r\n                        }\r\n                        {isRegistering && <>\r\n                            <Button\r\n                                title='Create Account'\r\n                                disabled={submitted || !isValidEMail}\r\n                                onPress={onRegisterPress}\r\n                            />\r\n                            <View style={Styles.auth.footerView}>\r\n                                <Text fontSize={16}>Already got an account?</Text>\r\n                                <Button\r\n                                    title='Log in'\r\n                                    onPress={onGotoLoginPress}\r\n                                />\r\n                            </View>\r\n                        </>}\r\n                        {!isRegistering && <>\r\n                            <Button\r\n                                title='Log in'\r\n                                disabled={submitted || !isValidEMail}\r\n                                onPress={onLoginPress}\r\n                                style={{ marginTop: 5 }}\r\n                            />\r\n                            <View style={Styles.auth.footerView}>\r\n                                <Text fontSize={16}>Don't have an account?</Text>\r\n                                <Button\r\n                                    title='Sign up'\r\n                                    onPress={onSignUpPress}\r\n                                />\r\n                            </View>\r\n                            <View style={Styles.auth.footerView}>\r\n                                <Text fontSize={16}>Did you forget your password?</Text>\r\n                                <Button\r\n                                    title='Password Reset'\r\n                                    onPress={onPasswordResetPress}\r\n                                />\r\n                            </View>\r\n                            {Platform.OS === 'web' && <>\r\n                                <View style={Styles.auth.footerView}>\r\n                                    <Text fontSize={16}>Google Sign-In?</Text>\r\n                                    <Button\r\n                                        title='Google Sign-In'\r\n                                        onPress={signInWithGoogle}\r\n                                    />\r\n                                </View>\r\n                            </>}\r\n                        </>}\r\n                    </ScrollView>\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ({ navigation }) =>\r\n    <Authentication\r\n        navigation={navigation}\r\n    //  customToken={'abc.123.45657'} {/* This is not a valid custom token */}\r\n    />\r\n\r\n","// This is a modified (with stripped TS) version of yup-phone, so it doesn't invalidate empty\r\n// phone numbers, that's .required()'s job. I current have a PR with yup-phone regarding this.\r\n\r\nimport * as Yup from 'yup';\r\nimport gPhoneNumber from 'google-libphonenumber';\r\n\r\nconst phoneUtil = gPhoneNumber.PhoneNumberUtil.getInstance();\r\n\r\nconst YUP_PHONE_METHOD = 'phone';\r\nconst CLDR_REGION_CODE_SIZE = 2;\r\n\r\nconst isValidCountryCode = (countryCode) =>\r\n    typeof countryCode === 'string' &&\r\n    countryCode.length === CLDR_REGION_CODE_SIZE;\r\n\r\nYup.addMethod(Yup.string, YUP_PHONE_METHOD, function yupPhone(\r\n    countryCode,\r\n    strict = false,\r\n    errorMessage = ''\r\n) {\r\n    const errMsg =\r\n        typeof errorMessage === 'string' && errorMessage\r\n            ? errorMessage\r\n            : isValidCountryCode(countryCode)\r\n                ? `\\${path} must be a valid phone number for region ${countryCode}`\r\n                : '${path} must be a valid phone number.';\r\n\r\n    return this.test(YUP_PHONE_METHOD, errMsg, (value) => {\r\n\r\n        if (!isValidCountryCode(countryCode)) {\r\n            // if not valid countryCode, then set default country to India (IN)\r\n            countryCode = 'US';\r\n            strict = false;\r\n        }\r\n        // This is what .required() is for\r\n        if (!value || ((typeof (value) === 'string') && value.length === 0)) return true\r\n\r\n        try {\r\n            const phoneNumber = phoneUtil.parseAndKeepRawInput(value, countryCode);\r\n\r\n            if (phoneNumber && phoneNumber.length > 0 && !phoneUtil.isPossibleNumber(phoneNumber)) {\r\n                return false;\r\n            }\r\n\r\n            const regionCodeFromPhoneNumber = phoneUtil.getRegionCodeForNumber(\r\n                phoneNumber\r\n            );\r\n\r\n            /* check if the countryCode provided should be used as\r\n             default country code or strictly followed\r\n           */\r\n            return strict\r\n                ? phoneUtil.isValidNumberForRegion(phoneNumber, countryCode)\r\n                : phoneUtil.isValidNumberForRegion(\r\n                    phoneNumber,\r\n                    regionCodeFromPhoneNumber\r\n                );\r\n        } catch {\r\n            return false;\r\n        }\r\n    });\r\n});","import React, { useEffect, useContext, useState, useRef, useMemo } from 'react'\r\nimport { FlatList, SafeAreaView } from 'react-native'\r\nimport { useAsync } from 'react-async-hook'\r\nimport { createStackNavigator } from '@react-navigation/stack'\r\nimport { NavigationContainer, DarkTheme, DefaultTheme } from '@react-navigation/native'\r\nimport Authentication from './Authentication'\r\nimport faker from 'faker'\r\nimport { Formik } from 'formik'\r\nimport * as yup from 'yup'\r\nimport { Colors } from 'react-native-paper'\r\nimport { Styles, Themes } from './shared/Constants'\r\nimport {\r\n    ActivityIndicator,\r\n    DisplayError,\r\n    Screen,\r\n    Container,\r\n    FormField,\r\n    Button,\r\n    Text,\r\n    TextInput,\r\n    View,\r\n    Picker,\r\n    FirestoreDocumentView,\r\n    InfiniteScroll,\r\n} from './themed/Components'\r\nimport { useAuthState } from './firebase/Firebase'\r\nimport { FirebaseContext } from './firebase/FirebaseContext'\r\nimport \"./shared/FormValidation\"\r\n\r\nconst fetchStuff = async () => true\r\nconst fetchResult = (async () => {\r\n    try {\r\n        return await fetchStuff()\r\n    } catch (error) { }\r\n})()\r\n\r\n// Playground\r\nexport const Playground = ({ navigation }) => {\r\n    const { currentUser, claims, addClaim, removeClaim } = useContext(FirebaseContext)\r\n    const [claimName, setClaimName] = useState()\r\n    const [data, setData] = useState([])\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            // setData([\r\n            //     'First',\r\n            //     'Second',\r\n            //     'Third'\r\n            // ]) // iOS isn't liking this, web is fine\r\n            setData([\r\n                { label: 'First', value: 1 },\r\n                { label: 'Second', value: 2 },\r\n                { label: 'Third', value: 3 }\r\n            ])\r\n        }, 1000);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!currentUser) return\r\n        //console.log(currentUser)\r\n    }, [currentUser])\r\n\r\n\r\n    return (\r\n        <Screen navigation={navigation} title='Playground'>\r\n            <View>\r\n                <Picker\r\n                    data={data}\r\n                    onValueChanged={value => {\r\n                        console.log(value)\r\n                    }}\r\n                />\r\n                <TextInput\r\n                    onChangeText={text => setClaimName(text)}\r\n                    placeHolder={'claim'}\r\n                />\r\n                <Button\r\n                    title='Add Claim'\r\n                    onPress={async () => {\r\n                        await addClaim(claimName)\r\n                        await currentUser.reload() // Since I'm working with my own claims\r\n                    }}\r\n                />\r\n                <Button\r\n                    title='Remove Claim'\r\n                    onPress={async () => {\r\n                        await removeClaim(claimName)\r\n                        await currentUser.reload() // Since I'm working with my own claims\r\n                    }}\r\n                />\r\n                <Button\r\n                    title='Console Log Claims'\r\n                    onPress={() => console.log(claims)}\r\n                />\r\n                <Button\r\n                    title='Reload Current User'\r\n                    onPress={async () => {\r\n                        await currentUser.reload()\r\n                    }}\r\n                />\r\n            </View>\r\n        </Screen>\r\n    )\r\n}\r\n\r\nconst Stack = createStackNavigator()\r\nexport default ({ navigation }) => {\r\n    const theme = ''\r\n    const [currentUser, loading, error] = useAuthState();\r\n\r\n    if (loading) {\r\n        return (\r\n            <Screen title='Playground'>\r\n                <ActivityIndicator />\r\n            </Screen>\r\n        )\r\n    }\r\n    else if (error) {\r\n        return (\r\n            <Screen title='Playground'>\r\n                <DisplayError errorMessage={\"Firebase Error: \" + firebaseError.message} />\r\n            </Screen>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <NavigationContainer\r\n                theme={theme === \"Dark\" ? DarkTheme : DefaultTheme}\r\n            >\r\n                <Stack.Navigator\r\n                    initialRouteName={currentUser ? \"Main\" : \"Authentication\"}\r\n                    headerMode=\"none\"\r\n                >\r\n                    <Stack.Screen name=\"Authentication\" component={Authentication} />\r\n                    <Stack.Screen\r\n                        name=\"Main\"\r\n                        component={Playground}\r\n                    />\r\n                </Stack.Navigator>\r\n            </NavigationContainer>\r\n        )\r\n    }\r\n}\r\n","import { auth } from 'firebase'\r\nimport React, { createContext, useState, useEffect, useRef } from 'react'\r\nimport { useAuthState, getCurrentUser, getCollection, useCollection } from '../firebase/Firebase'\r\n\r\nexport const ProfileContext = createContext()\r\n\r\nconst sleep = async delay => await new Promise(r => setTimeout(r, delay));\r\n\r\nexport const useProfiler = () => {\r\n    const [snapshot, setSnapshot] = useState()\r\n    const [isLoadingCollection, setIsLoadingCollection] = useState(true)\r\n    const [collectionError, setCollectionError] = useState()\r\n    const [isLoadingProfile, setIsLoadingProfile] = useState(true)\r\n    const [cachedUsers, setCachedUsers] = useState({})\r\n    const [currentUser, loading, error] = useAuthState();\r\n    const [isFetching, setIsFetching] = useState(true)\r\n    const isFetchingRef = useRef(false)\r\n    const fetchUidRef = useRef(null)\r\n    const lookupQueueRef = useRef([])\r\n\r\n    const hasProfile = async userId => {\r\n        if (!userId) {\r\n            const currentUser = getCurrentUser()\r\n            userId = currentUser ? currentUser.uid : null\r\n        }\r\n        if (!userId) return false\r\n        if (cachedUsers[userId]) return true\r\n        const docRef = await getCollection('profiles').doc(userId).get()\r\n        return docRef.exists\r\n    }\r\n\r\n    const getUserProfile = async userId => {\r\n        if (!userId) {\r\n            const currentUser = getCurrentUser()\r\n            userId = currentUser ? currentUser.uid : null\r\n        }\r\n        const docRef = await getCollection('profiles').doc(userId).get()\r\n        if (docRef.exists) {\r\n            const docData = docRef.data()\r\n            return docData\r\n        }\r\n        return {}\r\n    }\r\n\r\n    const fetchUser = async (userId, forced = false) => {\r\n        if (!userId || (cachedUsers[userId] && !forced) ||\r\n            (isFetchingRef.current && fetchUidRef.current === userId))\r\n            return\r\n        if (userId)\r\n            lookupQueueRef.current.push(userId)\r\n        if (isFetchingRef.current) return\r\n\r\n        let newCache = null\r\n        while (lookupQueueRef.current.length > 0) {\r\n            if (!newCache) {\r\n                newCache = { ...cachedUsers }\r\n                if (!forced)\r\n                    setIsFetching(true)\r\n            }\r\n            fetchUidRef.current = lookupQueueRef.current.shift()\r\n\r\n            if (!isFetchingRef.current) {\r\n                isFetchingRef.current = true\r\n            }\r\n            console.log(`Starting fetchUser for ${fetchUidRef.current}`)\r\n            try {\r\n                const profile = await getUserProfile(fetchUidRef.current)\r\n                newCache[fetchUidRef.current] = profile\r\n            } catch (err) {\r\n                // This can happen because of the security rule that requires a user to have a profile\r\n                // document with their uid to have access to the database. Since this document is created\r\n                // by cloud functions, a new user's first sign-in may have these permission-denied exceptions.\r\n\r\n                /**\r\n                    FirebaseError: Missing or insufficient permissions.\r\n                        at new e (http://localhost:19006/static/js/bundle.js:30324:5382)\r\n                        at t.ti (http://localhost:19006/static/js/bundle.js:30324:84533)\r\n                        at t.Di (http://localhost:19006/static/js/bundle.js:30324:93181)\r\n                        at e.onMessage (http://localhost:19006/static/js/bundle.js:30324:213728)\r\n                        at http://localhost:19006/static/js/bundle.js:30324:212394\r\n                        at http://localhost:19006/static/js/bundle.js:30324:213279\r\n                        at http://localhost:19006/static/js/bundle.js:30324:109564\r\n                    ProfileContext.js:63 Starting fetchUser for {userId}\r\n                    ProfileContext.js:128 FirebaseError: Missing or insufficient permissions.\r\n                        at new e (http://localhost:19006/static/js/bundle.js:30324:5382)\r\n                        at t.ti (http://localhost:19006/static/js/bundle.js:30324:84533)\r\n                        at t.Di (http://localhost:19006/static/js/bundle.js:30324:93181)\r\n                        at e.onMessage (http://localhost:19006/static/js/bundle.js:30324:213728)\r\n                        at http://localhost:19006/static/js/bundle.js:30324:212394\r\n                        at http://localhost:19006/static/js/bundle.js:30324:213279\r\n                        at http://localhost:19006/static/js/bundle.js:30324:109564\r\n\r\n                 */\r\n                await sleep(2000)\r\n                console.log(err)\r\n            }\r\n            isFetchingRef.current = false\r\n        }\r\n        if (newCache)\r\n            setCachedUsers(newCache)\r\n        setIsFetching(false)\r\n    }\r\n\r\n    const getUserName = uid => {\r\n        if (!currentUser) return ''\r\n        if (!uid) uid = currentUser.uid\r\n        if (cachedUsers[uid] && cachedUsers[uid].displayName)\r\n            return cachedUsers[uid].displayName\r\n        else if (!cachedUsers[uid])\r\n            fetchUser(uid)\r\n        return ''\r\n    }\r\n\r\n    const verifyAccess = async () => {\r\n        var hasAccess = false\r\n        var retryCount = 0\r\n        var exception\r\n        while (!hasAccess && retryCount < 10) {\r\n            await new Promise(resolve => setTimeout(resolve, 500))\r\n            try {\r\n                const profiles = getCollection('profiles')\r\n                await profiles.get()\r\n                hasAccess = true\r\n            } catch (err) {\r\n                retryCount = retryCount + 1\r\n                exception = err\r\n                console.log(err)\r\n            }\r\n        }\r\n        setIsLoadingCollection(false)\r\n        if (!hasAccess)\r\n            setCollectionError(exception ? exception : new Error('permission-denied'))\r\n    }\r\n    // On component mounted\r\n    useEffect(() => {\r\n        //verifyAccess()\r\n        setIsLoadingCollection(false)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const username = getUserName()\r\n        if (username) {\r\n            setIsLoadingProfile(false)\r\n        }\r\n        else {\r\n            hasProfile()\r\n                .then(hasProfile => {\r\n                    if (hasProfile) {\r\n                        setIsLoadingProfile(false)\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                })\r\n        }\r\n    }, [cachedUsers])\r\n\r\n    useEffect(() => {\r\n        if (!snapshot) return\r\n\r\n        try {\r\n            snapshot.docChanges().forEach(documentChange => {\r\n                if (cachedUsers[documentChange.doc.id])\r\n                    fetchUser(documentChange.doc.id, true)\r\n            })\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }, [snapshot])\r\n\r\n    return {\r\n        cachedUsers,\r\n        fetchUser,\r\n        isFetching: isFetching || loading || isLoadingProfile || isLoadingCollection,\r\n        getUserName,\r\n        hasProfile,\r\n        getUserProfile,\r\n        error: error || collectionError\r\n    }\r\n}\r\n\r\n// Profile Provider\r\nexport const ProfileProvider = ({ children }) => {\r\n    const profiler = useProfiler()\r\n    return (\r\n        <ProfileContext.Provider value={profiler}>\r\n            {children}\r\n        </ProfileContext.Provider>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useContext, PureComponent } from 'react'\r\nimport { Screen, Button, Container, Text, ActivityIndicator } from './themed/Components'\r\nimport { GlobalContext } from './shared/GlobalContext'\r\nimport { ProfileContext } from './shared/ProfileContext'\r\nimport { Themes } from './shared/Constants'\r\n\r\nexport default ({ navigation }) => {\r\n    const [name, setName] = useState()\r\n    const profileCache = useContext(ProfileContext)\r\n    const { screenOrientation } = useContext(GlobalContext)\r\n\r\n    useEffect(() => {\r\n        console.log(`ScreenOrientation: ${screenOrientation}`)\r\n    }, [screenOrientation]);\r\n\r\n    useEffect(() => {\r\n        if (!profileCache) return\r\n        const username = profileCache.getUserName()\r\n        if (username) {\r\n            setName(username)\r\n        }\r\n    }, [profileCache.cachedUsers])\r\n\r\n    let children = <ActivityIndicator />\r\n    if (!profileCache.isFetching) {\r\n        children =\r\n            <Text>Welcome {name}</Text>\r\n    }\r\n\r\n    return (\r\n        <Screen\r\n            navigation={navigation}\r\n            title=\"Home\"\r\n        >\r\n            {children}\r\n        </Screen>\r\n    )\r\n}","import React, { PureComponent } from 'react';\r\nimport { Text, View } from '../themed/Components'\r\n\r\nexport default class Message extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.item = props.item\r\n        this.date = (this.item.postedAt ? this.item.postedAt.toDate() : new Date()).toLocaleDateString()\r\n        this.time = (this.item.postedAt ? this.item.postedAt.toDate() : new Date()).toLocaleTimeString()\r\n    }\r\n    render() {\r\n        return (\r\n            <View key={this.item.id} style={{ paddingVertical: 5 }}>\r\n                <Text fontSize={12} fontWeight=\"100\">\r\n                    {`${this.item.authorName} [ ${this.date} @ ${this.time} ] `}\r\n                </Text>\r\n                <Text fontSize={14} fontWeight=\"400\">\r\n                    {this.item.message}\r\n                </Text>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport {\r\n    View,\r\n    Screen,\r\n    Container,\r\n    Text,\r\n    Picker,\r\n    TextInput,\r\n    Button,\r\n    ActivityIndicator,\r\n    DisplayError,\r\n    FirestoreCollectionView\r\n} from '../themed/Components'\r\nimport { Styles } from '../shared/Constants'\r\nimport { useCollection } from '../firebase/Firebase'\r\nimport { FirebaseContext } from '../firebase/FirebaseContext'\r\nimport Message from './Message'\r\n\r\nexport default ({ navigation }) => {\r\n    const { currentUser, claims } = useContext(FirebaseContext)\r\n    const [snapshot, loadingCollection, errorCollection] = useCollection('/profiles')\r\n    const [members, setMembers] = useState([])\r\n    const [messageText, setMessageText] = useState('')\r\n    const [groupCollectionPath, setGroupCollectionPath] = useState()\r\n\r\n    useEffect(() => {\r\n        if (loadingCollection || errorCollection || !snapshot) return\r\n        var newState = []\r\n        snapshot.docs.forEach(docRef => {\r\n            const push = async docRef => {\r\n                const name = await docRef.get('displayName')\r\n                newState.push({\r\n                    label: name,\r\n                    value: docRef.id\r\n                })\r\n            }\r\n            push(docRef).then(() => setMembers(newState))\r\n        })\r\n    }, [snapshot])\r\n\r\n    useEffect(() => {\r\n        console.log(claims)\r\n    }, [claims])\r\n\r\n    const sendMessage = () => {\r\n        // const text = messageText\r\n        // setMessageText('')\r\n        // createMessage(text)\r\n        //     .then(results => {\r\n        //         const data = results.data;\r\n        //         if (typeof (data.type) === 'string') {\r\n        //             console.log(\"Error: \" + data.message)\r\n        //             if (data.type === 'silent') return\r\n        //             alert(data.message)\r\n        //         } else {\r\n        //             console.log(data)\r\n        //         }\r\n        //     })\r\n        //     .catch(error => {\r\n        //         alert('Unhandled exception')\r\n        //     })\r\n    }\r\n\r\n    const onMessageKeyPress = ({ key }) => {\r\n        if (key != 'Enter') return\r\n        // Adds a new message to the chatroom\r\n        sendMessage()\r\n    }\r\n\r\n    return (\r\n        <Screen navigation={navigation} title={\"Messenger\"}>\r\n            <Container>\r\n                <View style={Styles.messenger.views}>\r\n                    <Picker\r\n                        data={members}\r\n                        onValueChanged={newValue => {\r\n                            console.log(newValue)\r\n                        }}\r\n                    />\r\n                </View>\r\n                <FirestoreCollectionView\r\n                    contentContainerStyle={Styles.messenger.flatList}\r\n                    collectionPath={groupCollectionPath}\r\n                    autoScrollToEnd={true}\r\n                    orderBy='postedAt'\r\n                    renderItem={({ item }) => <Message item={item} />}\r\n                />\r\n                <View style={Styles.messenger.views}>\r\n                    <TextInput\r\n                        value={messageText}\r\n                        style={Styles.messenger.textInput}\r\n                        onChangeText={msg => setMessageText(msg)}\r\n                        onKeyPress={onMessageKeyPress}\r\n                    />\r\n                    <Button\r\n                        title='Send'\r\n                        style={Styles.messenger.sendButton}\r\n                        disabled={messageText.length < 1}\r\n                        onPress={sendMessage}\r\n                    />\r\n                </View>\r\n            </Container>\r\n        </Screen>\r\n    )\r\n}\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport {\r\n    View,\r\n    Screen,\r\n    Container,\r\n    Text,\r\n    Picker,\r\n    TextInput,\r\n    Button,\r\n    ActivityIndicator,\r\n    DisplayError,\r\n    FirestoreCollectionView\r\n} from '../themed/Components'\r\nimport { Styles } from '../shared/Constants'\r\nimport { useCollection } from '../firebase/Firebase'\r\nimport { FirebaseContext } from '../firebase/FirebaseContext'\r\nimport Message from './Message'\r\n\r\nexport default ({ navigation }) => {\r\n    const { currentUser, claims } = useContext(FirebaseContext)\r\n    const [snapshot, loadingCollection, errorCollection] = useCollection('/groups')\r\n    const [groups, setGroups] = useState([])\r\n    const [messageText, setMessageText] = useState('')\r\n    const [groupCollectionPath, setGroupCollectionPath] = useState()\r\n\r\n    useEffect(() => {\r\n        if (loadingCollection || errorCollection || !snapshot) return\r\n        var newState = []\r\n        snapshot.docs.forEach(docRef => {\r\n            const push = async docRef => {\r\n                const name = await docRef.get('name')\r\n                newState.push({\r\n                    label: name,\r\n                    value: docRef.id\r\n                })\r\n            }\r\n            push(docRef).then(() => setGroups(newState))\r\n        })\r\n    }, [snapshot])\r\n\r\n    useEffect(() => {\r\n        console.log(claims)\r\n    }, [claims])\r\n\r\n    const sendMessage = () => {\r\n        // const text = messageText\r\n        // setMessageText('')\r\n        // createMessage(text)\r\n        //     .then(results => {\r\n        //         const data = results.data;\r\n        //         if (typeof (data.type) === 'string') {\r\n        //             console.log(\"Error: \" + data.message)\r\n        //             if (data.type === 'silent') return\r\n        //             alert(data.message)\r\n        //         } else {\r\n        //             console.log(data)\r\n        //         }\r\n        //     })\r\n        //     .catch(error => {\r\n        //         alert('Unhandled exception')\r\n        //     })\r\n    }\r\n\r\n    const onMessageKeyPress = ({ key }) => {\r\n        if (key != 'Enter') return\r\n        // Adds a new message to the chatroom\r\n        sendMessage()\r\n    }\r\n\r\n    return (\r\n        <Screen navigation={navigation} title={\"Group Messenger\"}>\r\n            <Container>\r\n                <View style={Styles.messenger.views}>\r\n                    <Picker\r\n                        data={groups}\r\n                        onValueChanged={newValue => {\r\n                            console.log(newValue)\r\n                        }}\r\n                    />\r\n                </View>\r\n                <FirestoreCollectionView\r\n                    contentContainerStyle={Styles.messenger.flatList}\r\n                    collectionPath={groupCollectionPath}\r\n                    autoScrollToEnd={true}\r\n                    orderBy='postedAt'\r\n                    renderItem={({ item }) => <Message item={item} />}\r\n                />\r\n                <View style={Styles.messenger.views}>\r\n                    <TextInput\r\n                        value={messageText}\r\n                        style={Styles.messenger.textInput}\r\n                        onChangeText={msg => setMessageText(msg)}\r\n                        onKeyPress={onMessageKeyPress}\r\n                    />\r\n                    <Button\r\n                        title='Send'\r\n                        style={Styles.messenger.sendButton}\r\n                        disabled={messageText.length < 1}\r\n                        onPress={sendMessage}\r\n                    />\r\n                </View>\r\n            </Container>\r\n        </Screen>\r\n    )\r\n}\r\n","import React, { useState, useContext, useEffect, useRef } from 'react'\r\nimport {\r\n    ScrollView, Text, Modal, TextInput, View, Button,\r\n    Container, Screen, Picker, ActivityIndicator, DisplayError\r\n} from '../themed/Components'\r\nimport { Styles, Themes } from '../shared/Constants'\r\nimport { GlobalContext } from '../shared/GlobalContext'\r\nimport { useCollection, getFirestore } from '../firebase/Firebase'\r\nimport { ProfileContext } from '../shared/ProfileContext'\r\n//import { ScrollView } from 'react-native-gesture-handler'\r\n\r\nexport default ({ navigation, ...restProps }) => {\r\n    const { theme } = useContext(GlobalContext)\r\n    const profileContext = useContext(ProfileContext)\r\n    const [snapshot, loadingCollection, errorCollection] = useCollection('/groups')\r\n    const [groups, setGroups] = useState([])\r\n    const [groupName, setGroupName] = useState('')\r\n    const [selectedGroup, setSelectedGroup] = useState()\r\n    const [members, setMembers] = useState([])\r\n    const [memberName, setMemberName] = useState('')\r\n    const [selectedMember, setSelectedMember] = useState()\r\n    const [addGroupModalVisible, setAddGroupModalVisible] = useState(false)\r\n    const [renameGroupModalVisible, setRenameGroupModalVisible] = useState(false)\r\n    const [removeGroupModalVisible, setRemoveGroupModalVisible] = useState(false)\r\n\r\n    const [addMemberModalVisible, setAddMemberModalVisible] = useState(false)\r\n    const [removeMemberModalVisible, setRemoveMemberModalVisible] = useState(false)\r\n\r\n\r\n    const renameGroup = () => {\r\n        getFirestore()\r\n            .collection('/groups')\r\n            .doc(selectedGroup.value)\r\n            .update({\r\n                name: groupName\r\n            }).then(() => {\r\n                setGroupName('')\r\n                selectedGroup.label = groupName\r\n            })\r\n            .catch(error => {\r\n                if (error.code === 'permission-denied')\r\n                    alert('Permission Denied')\r\n            })\r\n    }\r\n\r\n    const removeSelectedGroup = () => {\r\n        getFirestore()\r\n            .collection('/groups')\r\n            .doc(selectedGroup.value)\r\n            .delete()\r\n            .catch(error => {\r\n                if (error.code === 'permission-denied')\r\n                    alert('Permission Denied')\r\n            })\r\n    }\r\n\r\n    const loadGroupMembers = async () => {\r\n        if (!selectedGroup || !selectedGroup.value) return\r\n        const snapshot = await getFirestore()\r\n            .collection('groups')\r\n            .doc(selectedGroup.value)\r\n            .get()\r\n        const data = snapshot.data()\r\n        let promises = []\r\n        let groupMembers = []\r\n        if (data && data.members) {\r\n            const add = async uid => {\r\n                const profile = await profileContext.getUserProfile(uid)\r\n                groupMembers.push({\r\n                    label: profile.displayName,\r\n                    value: uid\r\n                })\r\n            }\r\n            data.members.forEach(member => {\r\n                promises.push(add(member))\r\n            })\r\n        }\r\n        Promise.all(promises).then(() => {\r\n            setMembers(groupMembers)\r\n            setSelectedMember((groupMembers.length > 0) ? groupMembers[0] : '')\r\n        }) //.catch(() => undefined)\r\n    }\r\n\r\n    const addGroup = () => {\r\n        getFirestore()\r\n            .collection('/groups')\r\n            .add({\r\n                name: groupName\r\n            }).then(() => setGroupName(''))\r\n            .catch(error => {\r\n                if (error.code === 'permission-denied')\r\n                    alert('Permission Denied')\r\n            })\r\n    }\r\n\r\n    const addMember = () => {\r\n        const newMembers = [...members, memberName]\r\n        console.log(newMembers)\r\n        getFirestore()\r\n            .collection('groups')\r\n            .doc(selectedGroup.value)\r\n            .set({\r\n                name: selectedGroup.label,\r\n                members: newMembers\r\n            })\r\n            .then(() => {\r\n                setMembers(newMembers)\r\n            })\r\n            .catch(error => {\r\n                if (error.code === 'permission-denied')\r\n                    alert('Permission Denied')\r\n            })\r\n    }\r\n\r\n    const removeSelectedMember = () => {\r\n        const newMembers = members.filter(obj => obj.value != selectedMember.value)\r\n        console.log(newMembers)\r\n        getFirestore()\r\n            .collection('groups')\r\n            .doc(selectedGroup.value)\r\n            .set({\r\n                name: selectedGroup.label,\r\n                members: newMembers\r\n            })\r\n            .then(() => {\r\n                setMembers(newMembers)\r\n            })\r\n            .catch(error => {\r\n                if (error.code === 'permission-denied')\r\n                    alert('Permission Denied')\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (loadingCollection || errorCollection || !snapshot) return\r\n\r\n        var newState = []\r\n        snapshot.docs.forEach(docRef => {\r\n            const push = async docRef => {\r\n                const name = await docRef.get('name')\r\n                newState.push({\r\n                    label: name,\r\n                    value: docRef.id\r\n                })\r\n            }\r\n            push(docRef).then(() => {\r\n                setGroups(newState)\r\n                setSelectedGroup(newState[0])\r\n            }) // .catch(() => undefined)\r\n        })\r\n    }, [snapshot])\r\n\r\n    useEffect(() => {\r\n        if (!selectedGroup)\r\n            setSelectedGroup(groups[0])\r\n    }, [groups])\r\n\r\n    useEffect(() => {\r\n        if (selectedGroup)\r\n            loadGroupMembers()\r\n    }, [selectedGroup])\r\n\r\n    useEffect(() => {\r\n        if (selectedMember)\r\n            console.log(selectedMember)\r\n    }, [selectedMember])\r\n\r\n    let render = <ActivityIndicator />\r\n    if (errorCollection) {\r\n        let errorCollectionCode = errorCollection ? errorCollection.code : null\r\n        render =\r\n            <DisplayError\r\n                permissionDenied={(errorCollectionCode === 'permission-denied')}\r\n            />\r\n    } else if (!loadingCollection) {\r\n        render = <>\r\n            <Modal\r\n                visible={removeMemberModalVisible}\r\n                onTouchOutside={() => setRemoveGroupModalVisible(false)}\r\n            >\r\n                <Text style={Styles.logoutModal.text}>\r\n                    Are you sure you want to remove the '{selectedMember && selectedMember.label}' from\r\n                    the '{selectedGroup && selectedGroup.label}' group?\r\n                </Text>\r\n                <View style={Styles.logoutModal.buttonView}>\r\n                    <Button\r\n                        style={Styles.logoutModal.button}\r\n                        title='Yes'\r\n                        onPress={() => setRemoveMemberModalVisible(false) || removeSelectedMember()}\r\n                    />\r\n                    <Button\r\n                        style={Styles.logoutModal.button}\r\n                        title='No'\r\n                        onPress={() => setRemoveMemberModalVisible(false)}\r\n                    />\r\n                </View>\r\n            </Modal>\r\n            <Modal\r\n                visible={addMemberModalVisible}\r\n                onTouchOutside={() => setAddMemberModalVisible(false)}\r\n            >\r\n                <TextInput\r\n                    style={Styles.logoutModal.text}\r\n                    placeholder=\"Member's UID\"\r\n                    onChangeText={text => setMemberName(text)}\r\n                />\r\n\r\n                <View style={Styles.logoutModal.buttonView}>\r\n                    <Button\r\n                        style={Styles.logoutModal.button}\r\n                        title='Add Member'\r\n                        onPress={() => setAddMemberModalVisible(false) || addMember()}\r\n                    />\r\n                    <Button\r\n                        style={Styles.logoutModal.button}\r\n                        title='Cancel'\r\n                        onPress={() => setAddMemberModalVisible(false) || setMemberName('')}\r\n                    />\r\n                </View>\r\n            </Modal>\r\n            <Modal\r\n                visible={removeGroupModalVisible}\r\n                onTouchOutside={() => setRemoveGroupModalVisible(false)}\r\n            >\r\n                <Text style={Styles.logoutModal.text}>\r\n                    Are you sure you want to remove the '{selectedGroup && selectedGroup.label}' group?\r\n                </Text>\r\n                <View style={Styles.logoutModal.buttonView}>\r\n                    <Button\r\n                        style={Styles.logoutModal.button}\r\n                        title='Yes'\r\n                        onPress={() => setRemoveGroupModalVisible(false) || removeSelectedGroup()}\r\n                    />\r\n                    <Button\r\n                        style={Styles.logoutModal.button}\r\n                        title='No'\r\n                        onPress={() => setRemoveGroupModalVisible(false)}\r\n                    />\r\n                </View>\r\n            </Modal>\r\n            <Modal\r\n                visible={addGroupModalVisible}\r\n                onTouchOutside={() => setAddGroupModalVisible(false)}\r\n            >\r\n                <TextInput\r\n                    style={Styles.logoutModal.text}\r\n                    placeholder='Group Name'\r\n                    onChangeText={text => setGroupName(text)}\r\n                />\r\n\r\n                <View style={Styles.logoutModal.buttonView}>\r\n                    <Button\r\n                        style={Styles.logoutModal.button}\r\n                        title='Add Group'\r\n                        onPress={() => setAddGroupModalVisible(false) || addGroup()}\r\n                    />\r\n                    <Button\r\n                        style={Styles.logoutModal.button}\r\n                        title='Cancel'\r\n                        onPress={() => setAddGroupModalVisible(false) || setGroupName('')}\r\n                    />\r\n                </View>\r\n            </Modal>\r\n            <Modal\r\n                visible={renameGroupModalVisible}\r\n                onTouchOutside={() => setRenameGroupModalVisible(false)}\r\n            >\r\n                <TextInput\r\n                    style={Styles.logoutModal.text}\r\n                    placeholder='Group Name'\r\n                    defaultValue={selectedGroup && selectedGroup.label}\r\n                    onChangeText={text => setGroupName(text)}\r\n                />\r\n\r\n                <View style={Styles.logoutModal.buttonView}>\r\n                    <Button\r\n                        style={Styles.logoutModal.button}\r\n                        title='Rename Group'\r\n                        onPress={() => setRenameGroupModalVisible(false) || renameGroup()}\r\n                    />\r\n                    <Button\r\n                        style={Styles.logoutModal.button}\r\n                        title='Cancel'\r\n                        onPress={() => setRenameGroupModalVisible(false) || setGroupName('')}\r\n                    />\r\n                </View>\r\n            </Modal>\r\n            <View>\r\n                <Text>Groups</Text>\r\n                <Picker\r\n                    data={groups}\r\n                    onValueChanged={newValue => setSelectedGroup(newValue)}\r\n                />\r\n                <View style={[Styles.views.flexRowJustifyCenter]}>\r\n                    <Button\r\n                        title='Add'\r\n                        onPress={() => setAddGroupModalVisible(true)}\r\n                    />\r\n                    <Button\r\n                        title='Rename'\r\n                        disabled={!selectedGroup}\r\n                        onPress={() => setGroupName(selectedGroup && selectedGroup.label) || setRenameGroupModalVisible(true)}\r\n                    />\r\n                    <Button\r\n                        title='Remove'\r\n                        disabled={!selectedGroup}\r\n                        onPress={() => setRemoveGroupModalVisible(true)}\r\n                    />\r\n                </View>\r\n                <Text>Members</Text>\r\n                <Picker\r\n                    data={members}\r\n                    onValueChanged={newValue => setSelectedMember(newValue)}\r\n                />\r\n                <View style={Styles.views.flexRowJustifyCenter}>\r\n                    <Button\r\n                        title='Add'\r\n                        onPress={() => setAddMemberModalVisible(true)}\r\n                    />\r\n                    <Button\r\n                        title='Remove'\r\n                        disabled={!selectedMember}\r\n                        onPress={() => setRemoveMemberModalVisible(true)}\r\n                    />\r\n                </View>\r\n\r\n            </View>\r\n        </>\r\n    }\r\n\r\n    return (\r\n        <Screen navigation={navigation} title={\"Manage Groups\"}>\r\n            <Container>\r\n                {render}\r\n            </Container>\r\n        </Screen>\r\n    )\r\n}\r\n","import React, { useState, useContext, useEffect, useRef } from 'react'\r\nimport { Text, Modal, TextInput, View, Button, Container, Screen, Picker, ActivityIndicator, DisplayError, LabeledSwitch } from '../themed/Components'\r\nimport { Styles, Themes } from '../shared/Constants'\r\nimport { GlobalContext } from '../shared/GlobalContext'\r\nimport { FirebaseContext } from '../firebase/FirebaseContext'\r\nimport { useCollection, getFirestore } from '../firebase/Firebase'\r\n\r\nexport default ({ navigation, ...restProps }) => {\r\n    const { theme } = useContext(GlobalContext)\r\n    const { currentUser, claims, addClaim, removeClaim, getClaims } = useContext(FirebaseContext)\r\n    const [snapshot, loadingCollection, errorCollection] = useCollection('profiles')\r\n    const [members, setMembers] = useState([])\r\n    const [selectedMember, setSelectedMember] = useState()\r\n    const [loadingClaims, setLoadingClaims] = useState(false)\r\n    const [isAdmin, setIsAdmin] = useState()\r\n    const [isManager, setIsManager] = useState()\r\n    const [isModerator, setIsModerator] = useState()\r\n    const [permissionDenied, setPermissionDenied] = useState(true)\r\n\r\n    const setClaim = (uid, claimName, value) => {\r\n        let promise = value ? addClaim(uid, claimName) : removeClaim(uid, claimName)\r\n        promise.then(results => {\r\n            console.log(results)\r\n        })\r\n    }\r\n    const toggleAdmin = () => setIsAdmin(previousState => setClaim(selectedMember.value, 'admin', !previousState) || !previousState)\r\n    const toggleManager = () => setIsManager(previousState => setClaim(selectedMember.value, 'manager', !previousState) || !previousState)\r\n    const toggleModerator = () => setIsModerator(previousState => setClaim(selectedMember.value, 'moderator', !previousState) || !previousState)\r\n\r\n    useEffect(() => {\r\n        setPermissionDenied(!claims.admin)\r\n    }, [])\r\n\r\n    // Update the 'users' state\r\n    useEffect(() => {\r\n        if (loadingCollection || errorCollection || !snapshot) return\r\n        var newState = []\r\n        snapshot.docs.forEach(docRef => {\r\n            const push = async docRef => {\r\n                const name = await docRef.get('displayName')\r\n                newState.push({\r\n                    label: name,\r\n                    value: docRef.id\r\n                })\r\n            }\r\n            push(docRef)\r\n                .then(() => setMembers(newState))\r\n            // .catch(() => undefined)\r\n        })\r\n    }, [snapshot])\r\n\r\n    useEffect(() => {\r\n        if (!selectedMember)\r\n            setSelectedMember(members[0])\r\n    }, [members])\r\n\r\n    useEffect(() => {\r\n        if (!selectedMember) {\r\n            setIsAdmin(false)\r\n            setIsManager(false)\r\n            setIsModerator(false)\r\n            return\r\n        }\r\n        setLoadingClaims(true)\r\n        getClaims(selectedMember.value)\r\n            .then(claims => {\r\n                setIsAdmin(claims && !!claims.admin)\r\n                setIsManager(claims && !!claims.manager)\r\n                setIsModerator(claims && !!claims.moderator)\r\n                setLoadingClaims(false)\r\n            })\r\n    }, [selectedMember])\r\n\r\n    let render = <ActivityIndicator />\r\n    if (errorCollection || permissionDenied) {\r\n        let errorCollectionCode = errorCollection ? errorCollection.code : null\r\n        render =\r\n            <DisplayError\r\n                permissionDenied={(errorCollectionCode === 'permission-denied' || permissionDenied)}\r\n            />\r\n    } else if (!loadingCollection) {\r\n        render = <>\r\n            <View>\r\n                <Picker\r\n                    data={members}\r\n                    onValueChanged={newValue => {\r\n                        setSelectedMember(newValue)\r\n                    }}\r\n                />\r\n            </View>\r\n            <View style={Styles.views.flexRowJustifyCenter}>\r\n                <LabeledSwitch style={{ marginRight: 15 }} isLoading={loadingClaims} label='Admin' value={!!isAdmin} onChange={toggleAdmin} />\r\n                <LabeledSwitch style={{ marginRight: 15 }} isLoading={loadingClaims} label='Manager' value={!!isManager} onChange={toggleManager} />\r\n                <LabeledSwitch isLoading={loadingClaims} label='Moderator' value={!!isModerator} onChange={toggleModerator} />\r\n            </View>\r\n        </>\r\n    }\r\n\r\n    return (\r\n        <Screen navigation={navigation} title={\"Manage User Roles\"}>\r\n            <Container>\r\n                {render}\r\n            </Container>\r\n        </Screen>\r\n    )\r\n}\r\n","import React, { useReducer } from 'react'\r\nimport { callFirebaseFunction } from '../firebase/Firebase'\r\n\r\nexport const createMessage = (messageText) =>\r\n    callFirebaseFunction('addMessage', {\r\n        message: messageText,\r\n    })\r\n\r\nexport const useMessenger = (messengerContainerId, viewLengthMinimum) =>\r\n    useReducer(reducer, {\r\n        messengerContainerId,\r\n        messageCollectionPath: \"/members/\" + messengerContainerId + \"/messages/\",\r\n        messengerDocumentPath: \"/members/\" + messengerContainerId,\r\n        viewLength: viewLengthMinimum,\r\n    })\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case \"setView\": {\r\n            const newState = { ...state }\r\n            newState.viewLength = action.length ? action.length : newState.viewLength\r\n            newState.viewFirst = action.first ? action.first : newState.viewFirst\r\n            newState.viewLast = action.last ? action.last : newState.viewLast\r\n            return newState\r\n        }\r\n        case 'incrementViewLength': {\r\n            const newState = { ...state }\r\n            newState.viewLength = newState.viewLength + (action.amount ? action.amount : 1)\r\n            console.log(`incrementViewLength: new length = ${newState.viewLength}`)\r\n            return newState\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport {\r\n    View,\r\n    Screen,\r\n    Container,\r\n    TextInput,\r\n    Button,\r\n    FirestoreCollectionView\r\n} from '../themed/Components'\r\nimport { Styles } from '../shared/Constants'\r\nimport { FirebaseContext } from '../firebase/FirebaseContext'\r\nimport Message from './Message'\r\nimport { createMessage, useMessenger } from './MessengerReducer'\r\n\r\nexport default ({ navigation }) => {\r\n    const { currentUser, claims } = useContext(FirebaseContext)\r\n    const [messageText, setMessageText] = useState('')\r\n    const [messenger, messengerDispatch] = useMessenger(currentUser.uid, 25)\r\n\r\n    useEffect(() => {\r\n        console.log(claims)\r\n    }, [claims])\r\n\r\n    const sendMessage = () => {\r\n        const text = messageText\r\n        setMessageText('')\r\n        createMessage(text)\r\n            .then(results => {\r\n                const data = results.data;\r\n                if (typeof (data.type) === 'string') {\r\n                    console.log(\"Error: \" + data.message)\r\n                    if (data.type === 'silent') return\r\n                    alert(data.message)\r\n                } else {\r\n                    console.log(data)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                alert('Unhandled exception')\r\n            })\r\n    }\r\n\r\n    const onMessageKeyPress = ({ key }) => {\r\n        if (key != 'Enter') return\r\n        // Adds a new message to the chatroom\r\n        sendMessage()\r\n    }\r\n\r\n    return (\r\n        <Screen navigation={navigation} title={\"Wall\"}>\r\n            <Container>\r\n                <FirestoreCollectionView\r\n                    contentContainerStyle={Styles.messenger.flatList}\r\n                    collectionPath={messenger.messageCollectionPath}\r\n                    autoScrollToEnd={true}\r\n                    orderBy='postedAt'\r\n                    renderItem={({ item }) => <Message item={item} />}\r\n                />\r\n                <View style={Styles.messenger.views}>\r\n                    <TextInput\r\n                        value={messageText}\r\n                        style={Styles.messenger.textInput}\r\n                        onChangeText={msg => setMessageText(msg)}\r\n                        onKeyPress={onMessageKeyPress}\r\n                    />\r\n                    <Button\r\n                        title='Send'\r\n                        style={Styles.messenger.sendButton}\r\n                        disabled={messageText.length < 1}\r\n                        onPress={sendMessage}\r\n                    />\r\n                </View>\r\n            </Container>\r\n        </Screen>\r\n    )\r\n}\r\n","import 'react-native-gesture-handler'\r\nimport React, { useContext } from 'react'\r\nimport { NavigationContainer, DarkTheme, DefaultTheme } from '@react-navigation/native'\r\nimport { createStackNavigator } from '@react-navigation/stack'\r\nimport { createDrawerNavigator } from '@react-navigation/drawer'\r\nimport { ActivityIndicator, DisplayError } from './themed/Components'\r\nimport { useAuthState } from './firebase/Firebase'\r\nimport { GlobalContext } from './shared/GlobalContext'\r\nimport { ProfileProvider } from './shared/ProfileContext'\r\nimport Home from './Home'\r\nimport Messenger from './messenger/Messenger'\r\nimport GroupMessenger from './messenger/GroupMessenger'\r\nimport ManageGroups from './messenger/ManageGroups'\r\nimport ManageUserRoles from './messenger/ManageUserRoles'\r\nimport MemberWall from './messenger/MemberWall'\r\nimport Authentication from './Authentication'\r\nimport { Playground } from './Playground'\r\n\r\nconst Drawer = createDrawerNavigator()\r\n\r\nconst DrawerNavigator = () => {\r\n    return (\r\n        <ProfileProvider>\r\n            <Drawer.Navigator\r\n            //drawerContent={props => <DrawerContent {...props} />}\r\n            >\r\n                <Drawer.Screen\r\n                    name=\"Home\"\r\n                    component={Home}\r\n                />\r\n                <Drawer.Screen\r\n                    name=\"Wall\"\r\n                    component={MemberWall}\r\n                />\r\n                <Drawer.Screen\r\n                    name=\"Messenger\"\r\n                    component={Messenger}\r\n                />\r\n                <Drawer.Screen\r\n                    name=\"Group Messenger\"\r\n                    component={GroupMessenger}\r\n                />\r\n                <Drawer.Screen\r\n                    name=\"Manage Groups\"\r\n                    component={ManageGroups}\r\n                />\r\n                <Drawer.Screen\r\n                    name=\"Manage User Roles\"\r\n                    component={ManageUserRoles}\r\n                />\r\n                <Drawer.Screen\r\n                    name=\"Playground\"\r\n                    component={Playground}\r\n                />\r\n            </Drawer.Navigator>\r\n        </ProfileProvider>\r\n    )\r\n}\r\n\r\nconst Stack = createStackNavigator()\r\nexport default () => {\r\n    const [user, firebaseLoading, firebaseError] = useAuthState()\r\n    const { theme } = useContext(GlobalContext)\r\n\r\n    if (firebaseLoading)\r\n        return (\r\n            <ActivityIndicator />\r\n        )\r\n    if (firebaseError)\r\n        return (\r\n            <DisplayError errorMessage={\"Firebase Error: \" + firebaseError.message} />\r\n        )\r\n    return (\r\n        <NavigationContainer\r\n            theme={theme === \"Dark\" ? DarkTheme : DefaultTheme}\r\n        >\r\n            <Stack.Navigator\r\n                headerMode=\"none\"\r\n                initialRouteName={user ? \"Main\" : \"Authentication\"}\r\n                navigationOptions={({ navigation }) => ({\r\n                    headerLeft: null\r\n                })}>\r\n                <Stack.Screen name=\"Authentication\" component={Authentication} />\r\n                <Stack.Screen name=\"Main\" component={DrawerNavigator} />\r\n            </Stack.Navigator>\r\n        </NavigationContainer>\r\n    )\r\n}\r\n\r\n","import 'react-native-gesture-handler'\r\nimport React, { useState } from 'react'\r\nimport { ModalPortal } from 'react-native-modals'\r\nimport { AppLoading } from 'expo'\r\nimport * as Fonts from 'expo-font'\r\nimport { FirebaseProvider } from './components/firebase/FirebaseContext'\r\nimport { GlobalProvider } from './components/shared/GlobalContext'\r\nimport { Defaults } from './components/shared/Constants'\r\nimport Playground from './components/Playground'\r\nimport AppNavigator from './components/Navigation'\r\n\r\nconst getFonts = () => Fonts.loadAsync({\r\n    'serif-pro-black': require('./assets/fonts/SourceSerifPro/SourceSerifPro-Black.ttf'),\r\n    'serif-pro-bold': require('./assets/fonts/SourceSerifPro/SourceSerifPro-Bold.ttf')\r\n})\r\n\r\nexport default function App() {\r\n    const [fontsLoaded, setFontsLoaded] = useState(false)\r\n\r\n    if (!fontsLoaded) {\r\n        return (\r\n            <AppLoading\r\n                startAsync={getFonts}\r\n                onFinish={() => setFontsLoaded(true)}\r\n            />\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <GlobalProvider>\r\n                <FirebaseProvider>\r\n                    {(Defaults.playgroundMode ? <Playground /> : <AppNavigator />)}\r\n                    <ModalPortal />\r\n                </FirebaseProvider>\r\n            </GlobalProvider>\r\n        )\r\n    }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/icon.ad415ea7.png\";"],"sourceRoot":""}